GAS LISTING /tmp/cc2lxhOw.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB79:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** //
   2:src/syscall_c.cpp **** // Created by os on 8/11/22.
   3:src/syscall_c.cpp **** //
   4:src/syscall_c.cpp **** #include "../h/syscall_c.h"
   5:src/syscall_c.cpp **** #include "../h/riscv.hpp"
   6:src/syscall_c.cpp **** /*
   7:src/syscall_c.cpp **** inline void takeArg(Codes c){
   8:src/syscall_c.cpp ****     __asm__ volatile("mv %0, %1" : "=r"(arr[0]): "r"(c));
   9:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(arr[1]));
  10:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(arr[2]));
  11:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a2" : "=r"(arr[3]));
  12:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a3" : "=r"(arr[4]));
  13:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  14:src/syscall_c.cpp **** }
  15:src/syscall_c.cpp **** inline void takeArg(Codes c){
  16:src/syscall_c.cpp ****     __asm__ volatile("mv a4, a3");
  17:src/syscall_c.cpp ****     __asm__ volatile("mv a3, a2");
  18:src/syscall_c.cpp ****     __asm__ volatile("mv a2, a1");
  19:src/syscall_c.cpp ****     __asm__ volatile("mv a1, a0");
  20:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0" : : "r"(c));
  21:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  22:src/syscall_c.cpp **** }
  23:src/syscall_c.cpp **** */
  24:src/syscall_c.cpp **** void *mem_alloc(size_t size) {
  12              		.loc 1 24 30
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  25:src/syscall_c.cpp ****     if(!size) return nullptr;
  21              		.loc 1 25 5
  22 000c 63080504 		beqz	a0,.L5
  26:src/syscall_c.cpp ****     size_t blocks;
  23              		.loc 1 26 5
  27:src/syscall_c.cpp ****     if((size+ sizeof(MemoryAllocator::MemDescr))% MEM_BLOCK_SIZE==0) blocks=(size+ sizeof(MemoryAll
  24              		.loc 1 27 5
  25              		.loc 1 27 13 is_stmt 0
  26 0010 13058502 		addi	a0,a0,40
  27              	.LVL1:
  28              		.loc 1 27 49
  29 0014 9377F503 		andi	a5,a0,63
  30              		.loc 1 27 5
  31 0018 639C0702 		bnez	a5,.L3
GAS LISTING /tmp/cc2lxhOw.s 			page 2


  32              		.loc 1 27 70 is_stmt 1 discriminator 1
  33              		.loc 1 27 76 is_stmt 0 discriminator 1
  34 001c 13556500 		srli	a0,a0,6
  35              	.LVL2:
  36              	.L4:
  28:src/syscall_c.cpp ****     else blocks=((size+ sizeof(MemoryAllocator::MemDescr))/MEM_BLOCK_SIZE)+1;
  29:src/syscall_c.cpp ****     __asm__ volatile("mv a0,%0" : : "r"(blocks));
  37              		.loc 1 29 5 is_stmt 1
  38              		.loc 1 29 49 is_stmt 0
  39              	#APP
  40              	# 29 "src/syscall_c.cpp" 1
  30              	    Riscv::takeArg(MEM_ALLOC);
  41              		mv a0,a0
  42              	# 0 "" 2
  43              		.loc 1 30 5 is_stmt 1
  44              	.LVL3:
  45              	#NO_APP
  46              	.LBB34:
  47              	.LBB35:
  48              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 8/11/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/riscv.hpp **** #include "../lib/console.h"
   9:src/../h/riscv.hpp **** #include "codes.hpp"
  10:src/../h/riscv.hpp **** #include "tcb.hpp"
  11:src/../h/riscv.hpp **** #include "TimeSleep.hpp"
  12:src/../h/riscv.hpp **** #include "_console.hpp"
  13:src/../h/riscv.hpp **** class Riscv {
  14:src/../h/riscv.hpp **** private:
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     static void unexpectedTrap();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static void syscall(uint64 code,uint64 a1,uint64 a2,uint64 a3,uint64 a4);
  21:src/../h/riscv.hpp ****     static void kernelPrint(char const *string){
  22:src/../h/riscv.hpp ****         while (*string != '\0')
  23:src/../h/riscv.hpp ****         {
  24:src/../h/riscv.hpp ****             output->cons_put((*string));
  25:src/../h/riscv.hpp ****             string++;
  26:src/../h/riscv.hpp ****         }
  27:src/../h/riscv.hpp ****     }
  28:src/../h/riscv.hpp ****     static char digits[];
  29:src/../h/riscv.hpp ****     static void kernelPrintInt(int xx, int base=10, int sgn=0){
  30:src/../h/riscv.hpp ****         char buf[16];
  31:src/../h/riscv.hpp ****         int i, neg;
  32:src/../h/riscv.hpp ****         uint x;
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****         neg = 0;
  35:src/../h/riscv.hpp ****         if(sgn && xx < 0){
  36:src/../h/riscv.hpp ****             neg = 1;
  37:src/../h/riscv.hpp ****             x = -xx;
GAS LISTING /tmp/cc2lxhOw.s 			page 3


  38:src/../h/riscv.hpp ****         } else {
  39:src/../h/riscv.hpp ****             x = xx;
  40:src/../h/riscv.hpp ****         }
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****         i = 0;
  43:src/../h/riscv.hpp ****         do{
  44:src/../h/riscv.hpp ****             buf[i++] = digits[x % base];
  45:src/../h/riscv.hpp ****         }while((x /= base) != 0);
  46:src/../h/riscv.hpp ****         if(neg)
  47:src/../h/riscv.hpp ****             buf[i++] = '-';
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****         while(--i >= 0)
  50:src/../h/riscv.hpp ****             output->cons_put(buf[i]);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     }
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp **** public:
  55:src/../h/riscv.hpp ****     static uint64 returnValue();
  56:src/../h/riscv.hpp ****     static void determinePrivilege();
  57:src/../h/riscv.hpp ****     static void loadParams(uint64 *);
  58:src/../h/riscv.hpp ****     static void takeArg(Codes c){
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a4, a3");
  49              		.loc 2 59 9
  50              		.loc 2 59 38 is_stmt 0
  51              	#APP
  52              	# 59 "src/../h/riscv.hpp" 1
  60              	        __asm__ volatile("mv a3, a2");
  53              		mv a4, a3
  54              	# 0 "" 2
  55              		.loc 2 60 9 is_stmt 1
  56              		.loc 2 60 38 is_stmt 0
  57              	# 60 "src/../h/riscv.hpp" 1
  61              	        __asm__ volatile("mv a2, a1");
  58              		mv a3, a2
  59              	# 0 "" 2
  60              		.loc 2 61 9 is_stmt 1
  61              		.loc 2 61 38 is_stmt 0
  62              	# 61 "src/../h/riscv.hpp" 1
  62              	        __asm__ volatile("mv a1, a0");
  63              		mv a2, a1
  64              	# 0 "" 2
  65              		.loc 2 62 9 is_stmt 1
  66              		.loc 2 62 38 is_stmt 0
  67              	# 62 "src/../h/riscv.hpp" 1
  63              	        __asm__ volatile("mv a0, %0" : : "r"(c));
  68              		mv a1, a0
  69              	# 0 "" 2
  70              		.loc 2 63 9 is_stmt 1
  71              		.loc 2 63 49 is_stmt 0
  72              	#NO_APP
  73 0034 93071000 		li	a5,1
  74              	#APP
  75              	# 63 "src/../h/riscv.hpp" 1
  64              	        __asm__ volatile("ecall");
  76              		mv a0, a5
  77              	# 0 "" 2
  78              		.loc 2 64 9 is_stmt 1
GAS LISTING /tmp/cc2lxhOw.s 			page 4


  79              		.loc 2 64 34 is_stmt 0
  80              	# 64 "src/../h/riscv.hpp" 1
  65              	    }
  81              		ecall
  82              	# 0 "" 2
  83              	.LVL4:
  84              	#NO_APP
  85              	.LBE35:
  86              	.LBE34:
  31:src/syscall_c.cpp ****     uint64 ret;
  87              		.loc 1 31 5 is_stmt 1
  32:src/syscall_c.cpp ****     __asm__ volatile("mv %0,a0" : "=r"(ret));
  88              		.loc 1 32 5
  89              		.loc 1 32 45 is_stmt 0
  90              	#APP
  91              	# 32 "src/syscall_c.cpp" 1
  33              	    return (void*)ret;
  92              		mv a0,a0
  93              	# 0 "" 2
  94              	.LVL5:
  95              		.loc 1 33 5 is_stmt 1
  96              	#NO_APP
  97              	.L1:
  34:src/syscall_c.cpp **** }
  98              		.loc 1 34 1 is_stmt 0
  99 0044 03348100 		ld	s0,8(sp)
 100              		.cfi_remember_state
 101              		.cfi_restore 8
 102              		.cfi_def_cfa 2, 16
 103 0048 13010101 		addi	sp,sp,16
 104              		.cfi_def_cfa_offset 0
 105 004c 67800000 		jr	ra
 106              	.L3:
 107              		.cfi_restore_state
  28:src/syscall_c.cpp ****     __asm__ volatile("mv a0,%0" : : "r"(blocks));
 108              		.loc 1 28 10 is_stmt 1
  28:src/syscall_c.cpp ****     __asm__ volatile("mv a0,%0" : : "r"(blocks));
 109              		.loc 1 28 59 is_stmt 0
 110 0050 13556500 		srli	a0,a0,6
  28:src/syscall_c.cpp ****     __asm__ volatile("mv a0,%0" : : "r"(blocks));
 111              		.loc 1 28 16
 112 0054 13051500 		addi	a0,a0,1
 113              	.LVL6:
 114 0058 6FF09FFC 		j	.L4
 115              	.LVL7:
 116              	.L5:
  25:src/syscall_c.cpp ****     size_t blocks;
 117              		.loc 1 25 22
 118 005c 13050000 		li	a0,0
 119              	.LVL8:
 120 0060 6FF05FFE 		j	.L1
 121              		.cfi_endproc
 122              	.LFE79:
 124              		.align	2
 125              		.globl	_Z8mem_freePv
 127              	_Z8mem_freePv:
 128              	.LFB80:
GAS LISTING /tmp/cc2lxhOw.s 			page 5


  35:src/syscall_c.cpp **** 
  36:src/syscall_c.cpp **** int mem_free(void * adr) {
 129              		.loc 1 36 26 is_stmt 1
 130              		.cfi_startproc
 131              	.LVL9:
  37:src/syscall_c.cpp ****     if(!adr) return -1;
 132              		.loc 1 37 5
 133 0064 63060504 		beqz	a0,.L9
  36:src/syscall_c.cpp ****     if(!adr) return -1;
 134              		.loc 1 36 26 is_stmt 0
 135 0068 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 006c 23341100 		sd	ra,8(sp)
 138 0070 23308100 		sd	s0,0(sp)
 139              		.cfi_offset 1, -8
 140              		.cfi_offset 8, -16
 141 0074 13040101 		addi	s0,sp,16
 142              		.cfi_def_cfa 8, 0
  38:src/syscall_c.cpp ****     Riscv::takeArg(MEM_FREE);
 143              		.loc 1 38 5 is_stmt 1
 144              	.LVL10:
 145              	.LBB36:
 146              	.LBB37:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 147              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 148              		.loc 2 59 38 is_stmt 0
 149              	#APP
 150              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 151              		mv a4, a3
 152              	# 0 "" 2
 153              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 154              		.loc 2 60 38 is_stmt 0
 155              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 156              		mv a3, a2
 157              	# 0 "" 2
 158              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 159              		.loc 2 61 38 is_stmt 0
 160              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 161              		mv a2, a1
 162              	# 0 "" 2
 163              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 164              		.loc 2 62 38 is_stmt 0
 165              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 166              		mv a1, a0
 167              	# 0 "" 2
 168              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 169              		.loc 2 63 49 is_stmt 0
 170              	#NO_APP
GAS LISTING /tmp/cc2lxhOw.s 			page 6


 171 0088 93072000 		li	a5,2
 172              	#APP
 173              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 174              		mv a0, a5
 175              	# 0 "" 2
 176              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 177              		.loc 2 64 34 is_stmt 0
 178              	# 64 "src/../h/riscv.hpp" 1
 179              		ecall
 180              	# 0 "" 2
 181              	.LVL11:
 182              	#NO_APP
 183              	.LBE37:
 184              	.LBE36:
  39:src/syscall_c.cpp ****     return Riscv::returnValue();
 185              		.loc 1 39 5 is_stmt 1
 186              		.loc 1 39 30 is_stmt 0
 187 0094 97000000 		call	_ZN5Riscv11returnValueEv@plt
 187      E7800000 
 188              	.LVL12:
 189              		.loc 1 39 31
 190 009c 1B050500 		sext.w	a0,a0
  40:src/syscall_c.cpp **** }
 191              		.loc 1 40 1
 192 00a0 83308100 		ld	ra,8(sp)
 193              		.cfi_restore 1
 194 00a4 03340100 		ld	s0,0(sp)
 195              		.cfi_restore 8
 196              		.cfi_def_cfa 2, 16
 197 00a8 13010101 		addi	sp,sp,16
 198              		.cfi_def_cfa_offset 0
 199 00ac 67800000 		jr	ra
 200              	.LVL13:
 201              	.L9:
  37:src/syscall_c.cpp ****     Riscv::takeArg(MEM_FREE);
 202              		.loc 1 37 22
 203 00b0 1305F0FF 		li	a0,-1
 204              	.LVL14:
 205              		.loc 1 40 1
 206 00b4 67800000 		ret
 207              		.cfi_endproc
 208              	.LFE80:
 210              		.align	2
 211              		.globl	_Z7userModv
 213              	_Z7userModv:
 214              	.LFB81:
  41:src/syscall_c.cpp **** void userMod(){
 215              		.loc 1 41 15 is_stmt 1
 216              		.cfi_startproc
 217 00b8 130101FF 		addi	sp,sp,-16
 218              		.cfi_def_cfa_offset 16
 219 00bc 23348100 		sd	s0,8(sp)
 220              		.cfi_offset 8, -8
 221 00c0 13040101 		addi	s0,sp,16
 222              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/cc2lxhOw.s 			page 7


  42:src/syscall_c.cpp ****     Riscv::takeArg(USER_MOD);
 223              		.loc 1 42 5
 224              	.LVL15:
 225              	.LBB38:
 226              	.LBB39:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 227              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 228              		.loc 2 59 38 is_stmt 0
 229              	#APP
 230              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 231              		mv a4, a3
 232              	# 0 "" 2
 233              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 234              		.loc 2 60 38 is_stmt 0
 235              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 236              		mv a3, a2
 237              	# 0 "" 2
 238              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 239              		.loc 2 61 38 is_stmt 0
 240              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 241              		mv a2, a1
 242              	# 0 "" 2
 243              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 244              		.loc 2 62 38 is_stmt 0
 245              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 246              		mv a1, a0
 247              	# 0 "" 2
 248              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 249              		.loc 2 63 49 is_stmt 0
 250              	#NO_APP
 251 00d4 93073000 		li	a5,3
 252              	#APP
 253              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 254              		mv a0, a5
 255              	# 0 "" 2
 256              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 257              		.loc 2 64 34 is_stmt 0
 258              	# 64 "src/../h/riscv.hpp" 1
 259              		ecall
 260              	# 0 "" 2
 261              	.LVL16:
 262              	#NO_APP
 263              	.LBE39:
 264              	.LBE38:
  43:src/syscall_c.cpp **** }
 265              		.loc 1 43 1
GAS LISTING /tmp/cc2lxhOw.s 			page 8


 266 00e0 03348100 		ld	s0,8(sp)
 267              		.cfi_restore 8
 268              		.cfi_def_cfa 2, 16
 269 00e4 13010101 		addi	sp,sp,16
 270              		.cfi_def_cfa_offset 0
 271 00e8 67800000 		jr	ra
 272              		.cfi_endproc
 273              	.LFE81:
 275              		.align	2
 276              		.globl	_Z10thread_arg5CodesPP3TCBPFvPvES3_
 278              	_Z10thread_arg5CodesPP3TCBPFvPvES3_:
 279              	.LFB82:
  44:src/syscall_c.cpp **** int thread_arg(Codes code,thread_t *handle, void (*routine)(void *), void *arg) {
 280              		.loc 1 44 81 is_stmt 1
 281              		.cfi_startproc
 282              	.LVL17:
 283 00ec 130101FF 		addi	sp,sp,-16
 284              		.cfi_def_cfa_offset 16
 285 00f0 23348100 		sd	s0,8(sp)
 286              		.cfi_offset 8, -8
 287 00f4 13040101 		addi	s0,sp,16
 288              		.cfi_def_cfa 8, 0
  45:src/syscall_c.cpp ****     Riscv::takeArg(code);
 289              		.loc 1 45 5
 290              	.LVL18:
 291              	.LBB40:
 292              	.LBB41:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 293              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 294              		.loc 2 59 38 is_stmt 0
 295              	#APP
 296              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 297              		mv a4, a3
 298              	# 0 "" 2
 299              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 300              		.loc 2 60 38 is_stmt 0
 301              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 302              		mv a3, a2
 303              	# 0 "" 2
 304              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 305              		.loc 2 61 38 is_stmt 0
 306              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 307              		mv a2, a1
 308              	# 0 "" 2
 309              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 310              		.loc 2 62 38 is_stmt 0
 311              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 312              		mv a1, a0
 313              	# 0 "" 2
GAS LISTING /tmp/cc2lxhOw.s 			page 9


 314              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 315              		.loc 2 63 49 is_stmt 0
 316              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 317              		mv a0, a0
 318              	# 0 "" 2
 319              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 320              		.loc 2 64 34 is_stmt 0
 321              	# 64 "src/../h/riscv.hpp" 1
 322              		ecall
 323              	# 0 "" 2
 324              	.LVL19:
 325              	#NO_APP
 326              	.LBE41:
 327              	.LBE40:
  46:src/syscall_c.cpp ****     uint64 ret;
 328              		.loc 1 46 5 is_stmt 1
  47:src/syscall_c.cpp ****     __asm__ volatile("mv %0,a0" : "=r"(ret));
 329              		.loc 1 47 5
 330              		.loc 1 47 45 is_stmt 0
 331              	#APP
 332              	# 47 "src/syscall_c.cpp" 1
  48              	    return ret;
 333              		mv a0,a0
 334              	# 0 "" 2
 335              	.LVL20:
 336              		.loc 1 48 5 is_stmt 1
  49:src/syscall_c.cpp **** }
 337              		.loc 1 49 1 is_stmt 0
 338              	#NO_APP
 339 0114 1B050500 		sext.w	a0,a0
 340              	.LVL21:
 341 0118 03348100 		ld	s0,8(sp)
 342              		.cfi_restore 8
 343              		.cfi_def_cfa 2, 16
 344 011c 13010101 		addi	sp,sp,16
 345              		.cfi_def_cfa_offset 0
 346 0120 67800000 		jr	ra
 347              		.cfi_endproc
 348              	.LFE82:
 350              		.align	2
 351              		.globl	_Z13thread_createPP3TCBPFvPvES2_
 353              	_Z13thread_createPP3TCBPFvPvES2_:
 354              	.LFB83:
  50:src/syscall_c.cpp **** 
  51:src/syscall_c.cpp **** int thread_create(thread_t* handle, void (*routine)(void *), void *arg) {
 355              		.loc 1 51 73 is_stmt 1
 356              		.cfi_startproc
 357              	.LVL22:
  52:src/syscall_c.cpp ****     if(!handle) return -1;
 358              		.loc 1 52 5
 359 0124 63080506 		beqz	a0,.L20
  51:src/syscall_c.cpp ****     if(!handle) return -1;
 360              		.loc 1 51 73 is_stmt 0
 361 0128 130101FD 		addi	sp,sp,-48
GAS LISTING /tmp/cc2lxhOw.s 			page 10


 362              		.cfi_def_cfa_offset 48
 363 012c 23341102 		sd	ra,40(sp)
 364 0130 23308102 		sd	s0,32(sp)
 365 0134 233C9100 		sd	s1,24(sp)
 366 0138 23382101 		sd	s2,16(sp)
 367 013c 23343101 		sd	s3,8(sp)
 368              		.cfi_offset 1, -8
 369              		.cfi_offset 8, -16
 370              		.cfi_offset 9, -24
 371              		.cfi_offset 18, -32
 372              		.cfi_offset 19, -40
 373 0140 13040103 		addi	s0,sp,48
 374              		.cfi_def_cfa 8, 0
 375 0144 93040500 		mv	s1,a0
 376 0148 13890500 		mv	s2,a1
 377 014c 93090600 		mv	s3,a2
  53:src/syscall_c.cpp ****    void* stack=nullptr;
 378              		.loc 1 53 4 is_stmt 1
 379              	.LVL23:
  54:src/syscall_c.cpp ****    stack = mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
 380              		.loc 1 54 4
 381              		.loc 1 54 21 is_stmt 0
 382 0150 37850000 		li	a0,32768
 383              	.LVL24:
 384 0154 97000000 		call	_Z9mem_allocm
 384      E7800000 
 385              	.LVL25:
 386 015c 93060500 		mv	a3,a0
 387              	.LVL26:
  55:src/syscall_c.cpp ****    if(!stack) return -2;
 388              		.loc 1 55 4 is_stmt 1
 389 0160 630E0502 		beqz	a0,.L21
  56:src/syscall_c.cpp ****     return TCB::threadCreate(handle,routine,arg,stack);
 390              		.loc 1 56 5
 391              		.loc 1 56 29 is_stmt 0
 392 0164 13860900 		mv	a2,s3
 393 0168 93050900 		mv	a1,s2
 394 016c 13850400 		mv	a0,s1
 395              	.LVL27:
 396 0170 97000000 		call	_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_@plt
 396      E7800000 
 397              	.LVL28:
 398              	.L19:
  57:src/syscall_c.cpp **** 
  58:src/syscall_c.cpp **** }
 399              		.loc 1 58 1
 400 0178 83308102 		ld	ra,40(sp)
 401              		.cfi_restore 1
 402 017c 03340102 		ld	s0,32(sp)
 403              		.cfi_restore 8
 404              		.cfi_def_cfa 2, 48
 405 0180 83348101 		ld	s1,24(sp)
 406              		.cfi_restore 9
 407              	.LVL29:
 408 0184 03390101 		ld	s2,16(sp)
 409              		.cfi_restore 18
 410              	.LVL30:
GAS LISTING /tmp/cc2lxhOw.s 			page 11


 411 0188 83398100 		ld	s3,8(sp)
 412              		.cfi_restore 19
 413              	.LVL31:
 414 018c 13010103 		addi	sp,sp,48
 415              		.cfi_def_cfa_offset 0
 416 0190 67800000 		jr	ra
 417              	.LVL32:
 418              	.L20:
  52:src/syscall_c.cpp ****    void* stack=nullptr;
 419              		.loc 1 52 25
 420 0194 1305F0FF 		li	a0,-1
 421              	.LVL33:
 422              		.loc 1 58 1
 423 0198 67800000 		ret
 424              	.LVL34:
 425              	.L21:
 426              		.cfi_def_cfa_register 8
 427              		.cfi_offset 1, -8
 428              		.cfi_offset 8, -16
 429              		.cfi_offset 9, -24
 430              		.cfi_offset 18, -32
 431              		.cfi_offset 19, -40
  55:src/syscall_c.cpp ****     return TCB::threadCreate(handle,routine,arg,stack);
 432              		.loc 1 55 23
 433 019c 1305E0FF 		li	a0,-2
 434              	.LVL35:
 435 01a0 6FF09FFD 		j	.L19
 436              		.cfi_endproc
 437              	.LFE83:
 439              		.align	2
 440              		.globl	_Z11thread_exitv
 442              	_Z11thread_exitv:
 443              	.LFB84:
  59:src/syscall_c.cpp **** 
  60:src/syscall_c.cpp **** int thread_exit() {
 444              		.loc 1 60 19 is_stmt 1
 445              		.cfi_startproc
 446 01a4 130101FF 		addi	sp,sp,-16
 447              		.cfi_def_cfa_offset 16
 448 01a8 23341100 		sd	ra,8(sp)
 449 01ac 23308100 		sd	s0,0(sp)
 450              		.cfi_offset 1, -8
 451              		.cfi_offset 8, -16
 452 01b0 13040101 		addi	s0,sp,16
 453              		.cfi_def_cfa 8, 0
  61:src/syscall_c.cpp ****     Riscv::takeArg(THREAD_EXIT);
 454              		.loc 1 61 5
 455              	.LVL36:
 456              	.LBB42:
 457              	.LBB43:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 458              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 459              		.loc 2 59 38 is_stmt 0
 460              	#APP
 461              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
GAS LISTING /tmp/cc2lxhOw.s 			page 12


 462              		mv a4, a3
 463              	# 0 "" 2
 464              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 465              		.loc 2 60 38 is_stmt 0
 466              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 467              		mv a3, a2
 468              	# 0 "" 2
 469              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 470              		.loc 2 61 38 is_stmt 0
 471              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 472              		mv a2, a1
 473              	# 0 "" 2
 474              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 475              		.loc 2 62 38 is_stmt 0
 476              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 477              		mv a1, a0
 478              	# 0 "" 2
 479              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 480              		.loc 2 63 49 is_stmt 0
 481              	#NO_APP
 482 01c4 93072001 		li	a5,18
 483              	#APP
 484              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 485              		mv a0, a5
 486              	# 0 "" 2
 487              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 488              		.loc 2 64 34 is_stmt 0
 489              	# 64 "src/../h/riscv.hpp" 1
 490              		ecall
 491              	# 0 "" 2
 492              	.LVL37:
 493              	#NO_APP
 494              	.LBE43:
 495              	.LBE42:
  62:src/syscall_c.cpp ****     return Riscv::returnValue();
 496              		.loc 1 62 5 is_stmt 1
 497              		.loc 1 62 30 is_stmt 0
 498 01d0 97000000 		call	_ZN5Riscv11returnValueEv@plt
 498      E7800000 
 499              	.LVL38:
  63:src/syscall_c.cpp **** }
 500              		.loc 1 63 1
 501 01d8 1B050500 		sext.w	a0,a0
 502 01dc 83308100 		ld	ra,8(sp)
 503              		.cfi_restore 1
 504 01e0 03340100 		ld	s0,0(sp)
 505              		.cfi_restore 8
 506              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/cc2lxhOw.s 			page 13


 507 01e4 13010101 		addi	sp,sp,16
 508              		.cfi_def_cfa_offset 0
 509 01e8 67800000 		jr	ra
 510              		.cfi_endproc
 511              	.LFE84:
 513              		.section	.rodata.str1.8,"aMS",@progbits,1
 514              		.align	3
 515              	.LC0:
 516 0000 00       		.string	""
 517              		.text
 518              		.align	2
 519              		.globl	_Z15thread_dispatchv
 521              	_Z15thread_dispatchv:
 522              	.LFB85:
  64:src/syscall_c.cpp **** 
  65:src/syscall_c.cpp **** void thread_dispatch() {
 523              		.loc 1 65 24 is_stmt 1
 524              		.cfi_startproc
 525 01ec 130101FF 		addi	sp,sp,-16
 526              		.cfi_def_cfa_offset 16
 527 01f0 23341100 		sd	ra,8(sp)
 528 01f4 23308100 		sd	s0,0(sp)
 529              		.cfi_offset 1, -8
 530              		.cfi_offset 8, -16
 531 01f8 13040101 		addi	s0,sp,16
 532              		.cfi_def_cfa 8, 0
  66:src/syscall_c.cpp ****     Riscv::takeArg(THREAD_DISPATCH);
 533              		.loc 1 66 5
 534              	.LVL39:
 535              	.LBB44:
 536              	.LBB45:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 537              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 538              		.loc 2 59 38 is_stmt 0
 539              	#APP
 540              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 541              		mv a4, a3
 542              	# 0 "" 2
 543              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 544              		.loc 2 60 38 is_stmt 0
 545              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 546              		mv a3, a2
 547              	# 0 "" 2
 548              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 549              		.loc 2 61 38 is_stmt 0
 550              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 551              		mv a2, a1
 552              	# 0 "" 2
 553              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 554              		.loc 2 62 38 is_stmt 0
GAS LISTING /tmp/cc2lxhOw.s 			page 14


 555              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 556              		mv a1, a0
 557              	# 0 "" 2
 558              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 559              		.loc 2 63 49 is_stmt 0
 560              	#NO_APP
 561 020c 93073001 		li	a5,19
 562              	#APP
 563              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 564              		mv a0, a5
 565              	# 0 "" 2
 566              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 567              		.loc 2 64 34 is_stmt 0
 568              	# 64 "src/../h/riscv.hpp" 1
 569              		ecall
 570              	# 0 "" 2
 571              	.LVL40:
 572              	#NO_APP
 573              	.LBE45:
 574              	.LBE44:
  67:src/syscall_c.cpp ****     printString("");
 575              		.loc 1 67 5 is_stmt 1
 576              		.loc 1 67 16 is_stmt 0
 577 0218 17050000 		lla	a0,.LC0
 577      13050500 
 578 0220 97000000 		call	_Z11printStringPKc@plt
 578      E7800000 
 579              	.LVL41:
  68:src/syscall_c.cpp **** }
 580              		.loc 1 68 1
 581 0228 83308100 		ld	ra,8(sp)
 582              		.cfi_restore 1
 583 022c 03340100 		ld	s0,0(sp)
 584              		.cfi_restore 8
 585              		.cfi_def_cfa 2, 16
 586 0230 13010101 		addi	sp,sp,16
 587              		.cfi_def_cfa_offset 0
 588 0234 67800000 		jr	ra
 589              		.cfi_endproc
 590              	.LFE85:
 592              		.align	2
 593              		.globl	_Z8sem_openPP3Semj
 595              	_Z8sem_openPP3Semj:
 596              	.LFB86:
  69:src/syscall_c.cpp **** int sem_open(sem_t *handle, unsigned init) {
 597              		.loc 1 69 44 is_stmt 1
 598              		.cfi_startproc
 599              	.LVL42:
  70:src/syscall_c.cpp ****     if(!handle)
 600              		.loc 1 70 5
 601 0238 63060504 		beqz	a0,.L32
  69:src/syscall_c.cpp **** int sem_open(sem_t *handle, unsigned init) {
 602              		.loc 1 69 44 is_stmt 0
GAS LISTING /tmp/cc2lxhOw.s 			page 15


 603 023c 130101FF 		addi	sp,sp,-16
 604              		.cfi_def_cfa_offset 16
 605 0240 23341100 		sd	ra,8(sp)
 606 0244 23308100 		sd	s0,0(sp)
 607              		.cfi_offset 1, -8
 608              		.cfi_offset 8, -16
 609 0248 13040101 		addi	s0,sp,16
 610              		.cfi_def_cfa 8, 0
  71:src/syscall_c.cpp ****         return -1;
  72:src/syscall_c.cpp **** 
  73:src/syscall_c.cpp ****     Riscv::takeArg(SEM_OPEN);
 611              		.loc 1 73 5 is_stmt 1
 612              	.LVL43:
 613              	.LBB46:
 614              	.LBB47:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 615              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 616              		.loc 2 59 38 is_stmt 0
 617              	#APP
 618              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 619              		mv a4, a3
 620              	# 0 "" 2
 621              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 622              		.loc 2 60 38 is_stmt 0
 623              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 624              		mv a3, a2
 625              	# 0 "" 2
 626              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 627              		.loc 2 61 38 is_stmt 0
 628              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 629              		mv a2, a1
 630              	# 0 "" 2
 631              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 632              		.loc 2 62 38 is_stmt 0
 633              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 634              		mv a1, a0
 635              	# 0 "" 2
 636              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 637              		.loc 2 63 49 is_stmt 0
 638              	#NO_APP
 639 025c 93071002 		li	a5,33
 640              	#APP
 641              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 642              		mv a0, a5
 643              	# 0 "" 2
 644              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
GAS LISTING /tmp/cc2lxhOw.s 			page 16


 645              		.loc 2 64 34 is_stmt 0
 646              	# 64 "src/../h/riscv.hpp" 1
 647              		ecall
 648              	# 0 "" 2
 649              	.LVL44:
 650              	#NO_APP
 651              	.LBE47:
 652              	.LBE46:
  74:src/syscall_c.cpp ****     return Riscv::returnValue();
 653              		.loc 1 74 5 is_stmt 1
 654              		.loc 1 74 30 is_stmt 0
 655 0268 97000000 		call	_ZN5Riscv11returnValueEv@plt
 655      E7800000 
 656              	.LVL45:
 657              		.loc 1 74 31
 658 0270 1B050500 		sext.w	a0,a0
  75:src/syscall_c.cpp **** }
 659              		.loc 1 75 1
 660 0274 83308100 		ld	ra,8(sp)
 661              		.cfi_restore 1
 662 0278 03340100 		ld	s0,0(sp)
 663              		.cfi_restore 8
 664              		.cfi_def_cfa 2, 16
 665 027c 13010101 		addi	sp,sp,16
 666              		.cfi_def_cfa_offset 0
 667 0280 67800000 		jr	ra
 668              	.LVL46:
 669              	.L32:
  71:src/syscall_c.cpp **** 
 670              		.loc 1 71 17
 671 0284 1305F0FF 		li	a0,-1
 672              	.LVL47:
 673              		.loc 1 75 1
 674 0288 67800000 		ret
 675              		.cfi_endproc
 676              	.LFE86:
 678              		.align	2
 679              		.globl	_Z9sem_closeP3Sem
 681              	_Z9sem_closeP3Sem:
 682              	.LFB87:
  76:src/syscall_c.cpp **** 
  77:src/syscall_c.cpp **** int sem_close(sem_t handle) {
 683              		.loc 1 77 29 is_stmt 1
 684              		.cfi_startproc
 685              	.LVL48:
  78:src/syscall_c.cpp ****     if(!handle)
 686              		.loc 1 78 5
 687 028c 63060504 		beqz	a0,.L39
  77:src/syscall_c.cpp ****     if(!handle)
 688              		.loc 1 77 29 is_stmt 0
 689 0290 130101FF 		addi	sp,sp,-16
 690              		.cfi_def_cfa_offset 16
 691 0294 23341100 		sd	ra,8(sp)
 692 0298 23308100 		sd	s0,0(sp)
 693              		.cfi_offset 1, -8
 694              		.cfi_offset 8, -16
 695 029c 13040101 		addi	s0,sp,16
GAS LISTING /tmp/cc2lxhOw.s 			page 17


 696              		.cfi_def_cfa 8, 0
  79:src/syscall_c.cpp ****         return -1;
  80:src/syscall_c.cpp ****     Riscv::takeArg(SEM_CLOSE);
 697              		.loc 1 80 5 is_stmt 1
 698              	.LVL49:
 699              	.LBB48:
 700              	.LBB49:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 701              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 702              		.loc 2 59 38 is_stmt 0
 703              	#APP
 704              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 705              		mv a4, a3
 706              	# 0 "" 2
 707              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 708              		.loc 2 60 38 is_stmt 0
 709              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 710              		mv a3, a2
 711              	# 0 "" 2
 712              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 713              		.loc 2 61 38 is_stmt 0
 714              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 715              		mv a2, a1
 716              	# 0 "" 2
 717              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 718              		.loc 2 62 38 is_stmt 0
 719              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 720              		mv a1, a0
 721              	# 0 "" 2
 722              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 723              		.loc 2 63 49 is_stmt 0
 724              	#NO_APP
 725 02b0 93072002 		li	a5,34
 726              	#APP
 727              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 728              		mv a0, a5
 729              	# 0 "" 2
 730              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 731              		.loc 2 64 34 is_stmt 0
 732              	# 64 "src/../h/riscv.hpp" 1
 733              		ecall
 734              	# 0 "" 2
 735              	.LVL50:
 736              	#NO_APP
 737              	.LBE49:
 738              	.LBE48:
GAS LISTING /tmp/cc2lxhOw.s 			page 18


  81:src/syscall_c.cpp ****     return Riscv::returnValue();
 739              		.loc 1 81 5 is_stmt 1
 740              		.loc 1 81 30 is_stmt 0
 741 02bc 97000000 		call	_ZN5Riscv11returnValueEv@plt
 741      E7800000 
 742              	.LVL51:
 743              		.loc 1 81 31
 744 02c4 1B050500 		sext.w	a0,a0
  82:src/syscall_c.cpp **** }
 745              		.loc 1 82 1
 746 02c8 83308100 		ld	ra,8(sp)
 747              		.cfi_restore 1
 748 02cc 03340100 		ld	s0,0(sp)
 749              		.cfi_restore 8
 750              		.cfi_def_cfa 2, 16
 751 02d0 13010101 		addi	sp,sp,16
 752              		.cfi_def_cfa_offset 0
 753 02d4 67800000 		jr	ra
 754              	.LVL52:
 755              	.L39:
  79:src/syscall_c.cpp ****     Riscv::takeArg(SEM_CLOSE);
 756              		.loc 1 79 17
 757 02d8 1305F0FF 		li	a0,-1
 758              	.LVL53:
 759              		.loc 1 82 1
 760 02dc 67800000 		ret
 761              		.cfi_endproc
 762              	.LFE87:
 764              		.align	2
 765              		.globl	_Z8sem_waitP3Sem
 767              	_Z8sem_waitP3Sem:
 768              	.LFB88:
  83:src/syscall_c.cpp **** int sem_wait(sem_t id) {
 769              		.loc 1 83 24 is_stmt 1
 770              		.cfi_startproc
 771              	.LVL54:
  84:src/syscall_c.cpp ****     if(!id) return -1;
 772              		.loc 1 84 5
 773 02e0 630E0504 		beqz	a0,.L46
  83:src/syscall_c.cpp **** int sem_wait(sem_t id) {
 774              		.loc 1 83 24 is_stmt 0
 775 02e4 130101FF 		addi	sp,sp,-16
 776              		.cfi_def_cfa_offset 16
 777 02e8 23341100 		sd	ra,8(sp)
 778 02ec 23308100 		sd	s0,0(sp)
 779              		.cfi_offset 1, -8
 780              		.cfi_offset 8, -16
 781 02f0 13040101 		addi	s0,sp,16
 782              		.cfi_def_cfa 8, 0
  85:src/syscall_c.cpp ****     Riscv::takeArg(SEM_WAIT);
 783              		.loc 1 85 5 is_stmt 1
 784              	.LVL55:
 785              	.LBB50:
 786              	.LBB51:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 787              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
GAS LISTING /tmp/cc2lxhOw.s 			page 19


 788              		.loc 2 59 38 is_stmt 0
 789              	#APP
 790              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 791              		mv a4, a3
 792              	# 0 "" 2
 793              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 794              		.loc 2 60 38 is_stmt 0
 795              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 796              		mv a3, a2
 797              	# 0 "" 2
 798              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 799              		.loc 2 61 38 is_stmt 0
 800              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 801              		mv a2, a1
 802              	# 0 "" 2
 803              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 804              		.loc 2 62 38 is_stmt 0
 805              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 806              		mv a1, a0
 807              	# 0 "" 2
 808              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 809              		.loc 2 63 49 is_stmt 0
 810              	#NO_APP
 811 0304 93073002 		li	a5,35
 812              	#APP
 813              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 814              		mv a0, a5
 815              	# 0 "" 2
 816              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 817              		.loc 2 64 34 is_stmt 0
 818              	# 64 "src/../h/riscv.hpp" 1
 819              		ecall
 820              	# 0 "" 2
 821              	.LVL56:
 822              	#NO_APP
 823              	.LBE51:
 824              	.LBE50:
  86:src/syscall_c.cpp ****     printString("");
 825              		.loc 1 86 5 is_stmt 1
 826              		.loc 1 86 16 is_stmt 0
 827 0310 17050000 		lla	a0,.LC0
 827      13050500 
 828              	.LVL57:
 829 0318 97000000 		call	_Z11printStringPKc@plt
 829      E7800000 
 830              	.LVL58:
  87:src/syscall_c.cpp ****     return Riscv::returnValue();
GAS LISTING /tmp/cc2lxhOw.s 			page 20


 831              		.loc 1 87 5 is_stmt 1
 832              		.loc 1 87 30 is_stmt 0
 833 0320 97000000 		call	_ZN5Riscv11returnValueEv@plt
 833      E7800000 
 834              	.LVL59:
 835              		.loc 1 87 31
 836 0328 1B050500 		sext.w	a0,a0
  88:src/syscall_c.cpp **** }
 837              		.loc 1 88 1
 838 032c 83308100 		ld	ra,8(sp)
 839              		.cfi_restore 1
 840 0330 03340100 		ld	s0,0(sp)
 841              		.cfi_restore 8
 842              		.cfi_def_cfa 2, 16
 843 0334 13010101 		addi	sp,sp,16
 844              		.cfi_def_cfa_offset 0
 845 0338 67800000 		jr	ra
 846              	.LVL60:
 847              	.L46:
  84:src/syscall_c.cpp ****     Riscv::takeArg(SEM_WAIT);
 848              		.loc 1 84 21
 849 033c 1305F0FF 		li	a0,-1
 850              	.LVL61:
 851              		.loc 1 88 1
 852 0340 67800000 		ret
 853              		.cfi_endproc
 854              	.LFE88:
 856              		.align	2
 857              		.globl	_Z10sem_signalP3Sem
 859              	_Z10sem_signalP3Sem:
 860              	.LFB89:
  89:src/syscall_c.cpp **** 
  90:src/syscall_c.cpp **** int sem_signal(sem_t id) {
 861              		.loc 1 90 26 is_stmt 1
 862              		.cfi_startproc
 863              	.LVL62:
  91:src/syscall_c.cpp ****     if(id==nullptr) return -1;
 864              		.loc 1 91 5
 865 0344 63060504 		beqz	a0,.L53
  90:src/syscall_c.cpp ****     if(id==nullptr) return -1;
 866              		.loc 1 90 26 is_stmt 0
 867 0348 130101FF 		addi	sp,sp,-16
 868              		.cfi_def_cfa_offset 16
 869 034c 23341100 		sd	ra,8(sp)
 870 0350 23308100 		sd	s0,0(sp)
 871              		.cfi_offset 1, -8
 872              		.cfi_offset 8, -16
 873 0354 13040101 		addi	s0,sp,16
 874              		.cfi_def_cfa 8, 0
  92:src/syscall_c.cpp ****     Riscv::takeArg(SEM_SIGNAL);
 875              		.loc 1 92 5 is_stmt 1
 876              	.LVL63:
 877              	.LBB52:
 878              	.LBB53:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 879              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
GAS LISTING /tmp/cc2lxhOw.s 			page 21


 880              		.loc 2 59 38 is_stmt 0
 881              	#APP
 882              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 883              		mv a4, a3
 884              	# 0 "" 2
 885              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 886              		.loc 2 60 38 is_stmt 0
 887              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 888              		mv a3, a2
 889              	# 0 "" 2
 890              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 891              		.loc 2 61 38 is_stmt 0
 892              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 893              		mv a2, a1
 894              	# 0 "" 2
 895              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 896              		.loc 2 62 38 is_stmt 0
 897              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 898              		mv a1, a0
 899              	# 0 "" 2
 900              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 901              		.loc 2 63 49 is_stmt 0
 902              	#NO_APP
 903 0368 93074002 		li	a5,36
 904              	#APP
 905              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 906              		mv a0, a5
 907              	# 0 "" 2
 908              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 909              		.loc 2 64 34 is_stmt 0
 910              	# 64 "src/../h/riscv.hpp" 1
 911              		ecall
 912              	# 0 "" 2
 913              	.LVL64:
 914              	#NO_APP
 915              	.LBE53:
 916              	.LBE52:
  93:src/syscall_c.cpp ****     return Riscv::returnValue();
 917              		.loc 1 93 5 is_stmt 1
 918              		.loc 1 93 30 is_stmt 0
 919 0374 97000000 		call	_ZN5Riscv11returnValueEv@plt
 919      E7800000 
 920              	.LVL65:
 921              		.loc 1 93 31
 922 037c 1B050500 		sext.w	a0,a0
  94:src/syscall_c.cpp **** }
 923              		.loc 1 94 1
GAS LISTING /tmp/cc2lxhOw.s 			page 22


 924 0380 83308100 		ld	ra,8(sp)
 925              		.cfi_restore 1
 926 0384 03340100 		ld	s0,0(sp)
 927              		.cfi_restore 8
 928              		.cfi_def_cfa 2, 16
 929 0388 13010101 		addi	sp,sp,16
 930              		.cfi_def_cfa_offset 0
 931 038c 67800000 		jr	ra
 932              	.LVL66:
 933              	.L53:
  91:src/syscall_c.cpp ****     Riscv::takeArg(SEM_SIGNAL);
 934              		.loc 1 91 29
 935 0390 1305F0FF 		li	a0,-1
 936              	.LVL67:
 937              		.loc 1 94 1
 938 0394 67800000 		ret
 939              		.cfi_endproc
 940              	.LFE89:
 942              		.align	2
 943              		.globl	_Z11thread_makePP3TCBPFvPvES2_
 945              	_Z11thread_makePP3TCBPFvPvES2_:
 946              	.LFB90:
  95:src/syscall_c.cpp **** int thread_make(thread_t *handle, void (*routine)(void *), void *arg) {
 947              		.loc 1 95 71 is_stmt 1
 948              		.cfi_startproc
 949              	.LVL68:
  96:src/syscall_c.cpp ****     if(!handle) return -1;
 950              		.loc 1 96 5
 951 0398 63080506 		beqz	a0,.L60
  95:src/syscall_c.cpp **** int thread_make(thread_t *handle, void (*routine)(void *), void *arg) {
 952              		.loc 1 95 71 is_stmt 0
 953 039c 130101FD 		addi	sp,sp,-48
 954              		.cfi_def_cfa_offset 48
 955 03a0 23341102 		sd	ra,40(sp)
 956 03a4 23308102 		sd	s0,32(sp)
 957 03a8 233C9100 		sd	s1,24(sp)
 958 03ac 23382101 		sd	s2,16(sp)
 959 03b0 23343101 		sd	s3,8(sp)
 960              		.cfi_offset 1, -8
 961              		.cfi_offset 8, -16
 962              		.cfi_offset 9, -24
 963              		.cfi_offset 18, -32
 964              		.cfi_offset 19, -40
 965 03b4 13040103 		addi	s0,sp,48
 966              		.cfi_def_cfa 8, 0
 967 03b8 93040500 		mv	s1,a0
 968 03bc 13890500 		mv	s2,a1
 969 03c0 93090600 		mv	s3,a2
  97:src/syscall_c.cpp ****     void* stack=nullptr;
 970              		.loc 1 97 5 is_stmt 1
 971              	.LVL69:
  98:src/syscall_c.cpp ****     stack = mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
 972              		.loc 1 98 5
 973              		.loc 1 98 22 is_stmt 0
 974 03c4 37850000 		li	a0,32768
 975              	.LVL70:
 976 03c8 97000000 		call	_Z9mem_allocm
GAS LISTING /tmp/cc2lxhOw.s 			page 23


 976      E7800000 
 977              	.LVL71:
 978 03d0 93060500 		mv	a3,a0
 979              	.LVL72:
  99:src/syscall_c.cpp ****     if(!stack) return -2;
 980              		.loc 1 99 5 is_stmt 1
 981 03d4 630E0502 		beqz	a0,.L61
 100:src/syscall_c.cpp ****     return TCB::threadMake(handle,routine,arg,stack);
 982              		.loc 1 100 5
 983              		.loc 1 100 27 is_stmt 0
 984 03d8 13860900 		mv	a2,s3
 985 03dc 93050900 		mv	a1,s2
 986 03e0 13850400 		mv	a0,s1
 987              	.LVL73:
 988 03e4 97000000 		call	_ZN3TCB10threadMakeEPPS_PFvPvES2_S2_@plt
 988      E7800000 
 989              	.LVL74:
 990              	.L59:
 101:src/syscall_c.cpp **** }
 991              		.loc 1 101 1
 992 03ec 83308102 		ld	ra,40(sp)
 993              		.cfi_restore 1
 994 03f0 03340102 		ld	s0,32(sp)
 995              		.cfi_restore 8
 996              		.cfi_def_cfa 2, 48
 997 03f4 83348101 		ld	s1,24(sp)
 998              		.cfi_restore 9
 999              	.LVL75:
 1000 03f8 03390101 		ld	s2,16(sp)
 1001              		.cfi_restore 18
 1002              	.LVL76:
 1003 03fc 83398100 		ld	s3,8(sp)
 1004              		.cfi_restore 19
 1005              	.LVL77:
 1006 0400 13010103 		addi	sp,sp,48
 1007              		.cfi_def_cfa_offset 0
 1008 0404 67800000 		jr	ra
 1009              	.LVL78:
 1010              	.L60:
  96:src/syscall_c.cpp ****     void* stack=nullptr;
 1011              		.loc 1 96 25
 1012 0408 1305F0FF 		li	a0,-1
 1013              	.LVL79:
 1014              		.loc 1 101 1
 1015 040c 67800000 		ret
 1016              	.LVL80:
 1017              	.L61:
 1018              		.cfi_def_cfa_register 8
 1019              		.cfi_offset 1, -8
 1020              		.cfi_offset 8, -16
 1021              		.cfi_offset 9, -24
 1022              		.cfi_offset 18, -32
 1023              		.cfi_offset 19, -40
  99:src/syscall_c.cpp ****     return TCB::threadMake(handle,routine,arg,stack);
 1024              		.loc 1 99 24
 1025 0410 1305E0FF 		li	a0,-2
 1026              	.LVL81:
GAS LISTING /tmp/cc2lxhOw.s 			page 24


 1027 0414 6FF09FFD 		j	.L59
 1028              		.cfi_endproc
 1029              	.LFE90:
 1031              		.align	2
 1032              		.globl	_Z10time_sleepm
 1034              	_Z10time_sleepm:
 1035              	.LFB91:
 102:src/syscall_c.cpp **** 
 103:src/syscall_c.cpp **** int time_sleep(time_t time) {
 1036              		.loc 1 103 29 is_stmt 1
 1037              		.cfi_startproc
 1038              	.LVL82:
 1039 0418 130101FF 		addi	sp,sp,-16
 1040              		.cfi_def_cfa_offset 16
 1041 041c 23341100 		sd	ra,8(sp)
 1042 0420 23308100 		sd	s0,0(sp)
 1043              		.cfi_offset 1, -8
 1044              		.cfi_offset 8, -16
 1045 0424 13040101 		addi	s0,sp,16
 1046              		.cfi_def_cfa 8, 0
 104:src/syscall_c.cpp ****     Riscv::takeArg(TIME_SLEEP);
 1047              		.loc 1 104 5
 1048              	.LVL83:
 1049              	.LBB54:
 1050              	.LBB55:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1051              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1052              		.loc 2 59 38 is_stmt 0
 1053              	#APP
 1054              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1055              		mv a4, a3
 1056              	# 0 "" 2
 1057              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1058              		.loc 2 60 38 is_stmt 0
 1059              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1060              		mv a3, a2
 1061              	# 0 "" 2
 1062              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1063              		.loc 2 61 38 is_stmt 0
 1064              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1065              		mv a2, a1
 1066              	# 0 "" 2
 1067              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1068              		.loc 2 62 38 is_stmt 0
 1069              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1070              		mv a1, a0
 1071              	# 0 "" 2
 1072              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
GAS LISTING /tmp/cc2lxhOw.s 			page 25


 1073              		.loc 2 63 49 is_stmt 0
 1074              	#NO_APP
 1075 0438 93071003 		li	a5,49
 1076              	#APP
 1077              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 1078              		mv a0, a5
 1079              	# 0 "" 2
 1080              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 1081              		.loc 2 64 34 is_stmt 0
 1082              	# 64 "src/../h/riscv.hpp" 1
 1083              		ecall
 1084              	# 0 "" 2
 1085              	.LVL84:
 1086              	#NO_APP
 1087              	.LBE55:
 1088              	.LBE54:
 105:src/syscall_c.cpp ****     printString("");
 1089              		.loc 1 105 5 is_stmt 1
 1090              		.loc 1 105 16 is_stmt 0
 1091 0444 17050000 		lla	a0,.LC0
 1091      13050500 
 1092              	.LVL85:
 1093 044c 97000000 		call	_Z11printStringPKc@plt
 1093      E7800000 
 1094              	.LVL86:
 106:src/syscall_c.cpp ****     return Riscv::returnValue();
 1095              		.loc 1 106 5 is_stmt 1
 1096              		.loc 1 106 30 is_stmt 0
 1097 0454 97000000 		call	_ZN5Riscv11returnValueEv@plt
 1097      E7800000 
 1098              	.LVL87:
 107:src/syscall_c.cpp **** }
 1099              		.loc 1 107 1
 1100 045c 1B050500 		sext.w	a0,a0
 1101 0460 83308100 		ld	ra,8(sp)
 1102              		.cfi_restore 1
 1103 0464 03340100 		ld	s0,0(sp)
 1104              		.cfi_restore 8
 1105              		.cfi_def_cfa 2, 16
 1106 0468 13010101 		addi	sp,sp,16
 1107              		.cfi_def_cfa_offset 0
 1108 046c 67800000 		jr	ra
 1109              		.cfi_endproc
 1110              	.LFE91:
 1112              		.align	2
 1113              		.globl	_Z4getcv
 1115              	_Z4getcv:
 1116              	.LFB92:
 108:src/syscall_c.cpp **** 
 109:src/syscall_c.cpp **** char getc() {
 1117              		.loc 1 109 13 is_stmt 1
 1118              		.cfi_startproc
 1119 0470 130101FF 		addi	sp,sp,-16
 1120              		.cfi_def_cfa_offset 16
 1121 0474 23341100 		sd	ra,8(sp)
GAS LISTING /tmp/cc2lxhOw.s 			page 26


 1122 0478 23308100 		sd	s0,0(sp)
 1123              		.cfi_offset 1, -8
 1124              		.cfi_offset 8, -16
 1125 047c 13040101 		addi	s0,sp,16
 1126              		.cfi_def_cfa 8, 0
 110:src/syscall_c.cpp ****     Riscv::takeArg(GETC);
 1127              		.loc 1 110 5
 1128              	.LVL88:
 1129              	.LBB56:
 1130              	.LBB57:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1131              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1132              		.loc 2 59 38 is_stmt 0
 1133              	#APP
 1134              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1135              		mv a4, a3
 1136              	# 0 "" 2
 1137              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1138              		.loc 2 60 38 is_stmt 0
 1139              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1140              		mv a3, a2
 1141              	# 0 "" 2
 1142              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1143              		.loc 2 61 38 is_stmt 0
 1144              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1145              		mv a2, a1
 1146              	# 0 "" 2
 1147              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1148              		.loc 2 62 38 is_stmt 0
 1149              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1150              		mv a1, a0
 1151              	# 0 "" 2
 1152              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1153              		.loc 2 63 49 is_stmt 0
 1154              	#NO_APP
 1155 0490 93071004 		li	a5,65
 1156              	#APP
 1157              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 1158              		mv a0, a5
 1159              	# 0 "" 2
 1160              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 1161              		.loc 2 64 34 is_stmt 0
 1162              	# 64 "src/../h/riscv.hpp" 1
 1163              		ecall
 1164              	# 0 "" 2
 1165              	.LVL89:
GAS LISTING /tmp/cc2lxhOw.s 			page 27


 1166              	#NO_APP
 1167              	.LBE57:
 1168              	.LBE56:
 111:src/syscall_c.cpp ****     return (char)Riscv::returnValue();
 1169              		.loc 1 111 5 is_stmt 1
 1170              		.loc 1 111 36 is_stmt 0
 1171 049c 97000000 		call	_ZN5Riscv11returnValueEv@plt
 1171      E7800000 
 1172              	.LVL90:
 112:src/syscall_c.cpp **** }
 1173              		.loc 1 112 1
 1174 04a4 1375F50F 		andi	a0,a0,0xff
 1175 04a8 83308100 		ld	ra,8(sp)
 1176              		.cfi_restore 1
 1177 04ac 03340100 		ld	s0,0(sp)
 1178              		.cfi_restore 8
 1179              		.cfi_def_cfa 2, 16
 1180 04b0 13010101 		addi	sp,sp,16
 1181              		.cfi_def_cfa_offset 0
 1182 04b4 67800000 		jr	ra
 1183              		.cfi_endproc
 1184              	.LFE92:
 1186              		.align	2
 1187              		.globl	_Z4putcc
 1189              	_Z4putcc:
 1190              	.LFB93:
 113:src/syscall_c.cpp **** 
 114:src/syscall_c.cpp **** void putc(char c) {
 1191              		.loc 1 114 19 is_stmt 1
 1192              		.cfi_startproc
 1193              	.LVL91:
 1194 04b8 130101FF 		addi	sp,sp,-16
 1195              		.cfi_def_cfa_offset 16
 1196 04bc 23348100 		sd	s0,8(sp)
 1197              		.cfi_offset 8, -8
 1198 04c0 13040101 		addi	s0,sp,16
 1199              		.cfi_def_cfa 8, 0
 115:src/syscall_c.cpp ****     Riscv::takeArg(PUTC);
 1200              		.loc 1 115 5
 1201              	.LVL92:
 1202              	.LBB58:
 1203              	.LBB59:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1204              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1205              		.loc 2 59 38 is_stmt 0
 1206              	#APP
 1207              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1208              		mv a4, a3
 1209              	# 0 "" 2
 1210              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1211              		.loc 2 60 38 is_stmt 0
 1212              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1213              		mv a3, a2
GAS LISTING /tmp/cc2lxhOw.s 			page 28


 1214              	# 0 "" 2
 1215              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1216              		.loc 2 61 38 is_stmt 0
 1217              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1218              		mv a2, a1
 1219              	# 0 "" 2
 1220              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1221              		.loc 2 62 38 is_stmt 0
 1222              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1223              		mv a1, a0
 1224              	# 0 "" 2
 1225              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1226              		.loc 2 63 49 is_stmt 0
 1227              	#NO_APP
 1228 04d4 93072004 		li	a5,66
 1229              	#APP
 1230              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 1231              		mv a0, a5
 1232              	# 0 "" 2
 1233              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 1234              		.loc 2 64 34 is_stmt 0
 1235              	# 64 "src/../h/riscv.hpp" 1
 1236              		ecall
 1237              	# 0 "" 2
 1238              	.LVL93:
 1239              	#NO_APP
 1240              	.LBE59:
 1241              	.LBE58:
 116:src/syscall_c.cpp **** 
 117:src/syscall_c.cpp **** }
 1242              		.loc 1 117 1
 1243 04e0 03348100 		ld	s0,8(sp)
 1244              		.cfi_restore 8
 1245              		.cfi_def_cfa 2, 16
 1246 04e4 13010101 		addi	sp,sp,16
 1247              		.cfi_def_cfa_offset 0
 1248 04e8 67800000 		jr	ra
 1249              		.cfi_endproc
 1250              	.LFE93:
 1252              		.align	2
 1253              		.globl	_Z11getThreadIdv
 1255              	_Z11getThreadIdv:
 1256              	.LFB94:
 118:src/syscall_c.cpp **** int getThreadId(){
 1257              		.loc 1 118 18 is_stmt 1
 1258              		.cfi_startproc
 1259 04ec 130101FF 		addi	sp,sp,-16
 1260              		.cfi_def_cfa_offset 16
 1261 04f0 23341100 		sd	ra,8(sp)
 1262 04f4 23308100 		sd	s0,0(sp)
GAS LISTING /tmp/cc2lxhOw.s 			page 29


 1263              		.cfi_offset 1, -8
 1264              		.cfi_offset 8, -16
 1265 04f8 13040101 		addi	s0,sp,16
 1266              		.cfi_def_cfa 8, 0
 119:src/syscall_c.cpp ****     Riscv::takeArg(GET_ID);
 1267              		.loc 1 119 5
 1268              	.LVL94:
 1269              	.LBB60:
 1270              	.LBB61:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1271              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1272              		.loc 2 59 38 is_stmt 0
 1273              	#APP
 1274              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1275              		mv a4, a3
 1276              	# 0 "" 2
 1277              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1278              		.loc 2 60 38 is_stmt 0
 1279              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1280              		mv a3, a2
 1281              	# 0 "" 2
 1282              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1283              		.loc 2 61 38 is_stmt 0
 1284              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1285              		mv a2, a1
 1286              	# 0 "" 2
 1287              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1288              		.loc 2 62 38 is_stmt 0
 1289              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1290              		mv a1, a0
 1291              	# 0 "" 2
 1292              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1293              		.loc 2 63 49 is_stmt 0
 1294              	#NO_APP
 1295 050c 93074000 		li	a5,4
 1296              	#APP
 1297              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 1298              		mv a0, a5
 1299              	# 0 "" 2
 1300              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 1301              		.loc 2 64 34 is_stmt 0
 1302              	# 64 "src/../h/riscv.hpp" 1
 1303              		ecall
 1304              	# 0 "" 2
 1305              	.LVL95:
 1306              	#NO_APP
GAS LISTING /tmp/cc2lxhOw.s 			page 30


 1307              	.LBE61:
 1308              	.LBE60:
 120:src/syscall_c.cpp ****     //printString("");
 121:src/syscall_c.cpp ****     return Riscv::returnValue();
 1309              		.loc 1 121 5 is_stmt 1
 1310              		.loc 1 121 30 is_stmt 0
 1311 0518 97000000 		call	_ZN5Riscv11returnValueEv@plt
 1311      E7800000 
 1312              	.LVL96:
 122:src/syscall_c.cpp **** }
 1313              		.loc 1 122 1
 1314 0520 1B050500 		sext.w	a0,a0
 1315 0524 83308100 		ld	ra,8(sp)
 1316              		.cfi_restore 1
 1317 0528 03340100 		ld	s0,0(sp)
 1318              		.cfi_restore 8
 1319              		.cfi_def_cfa 2, 16
 1320 052c 13010101 		addi	sp,sp,16
 1321              		.cfi_def_cfa_offset 0
 1322 0530 67800000 		jr	ra
 1323              		.cfi_endproc
 1324              	.LFE94:
 1326              		.align	2
 1327              		.globl	_Z10blockInterv
 1329              	_Z10blockInterv:
 1330              	.LFB95:
 123:src/syscall_c.cpp **** void blockInter(){
 1331              		.loc 1 123 18 is_stmt 1
 1332              		.cfi_startproc
 1333 0534 130101FF 		addi	sp,sp,-16
 1334              		.cfi_def_cfa_offset 16
 1335 0538 23348100 		sd	s0,8(sp)
 1336              		.cfi_offset 8, -8
 1337 053c 13040101 		addi	s0,sp,16
 1338              		.cfi_def_cfa 8, 0
 124:src/syscall_c.cpp ****     Riscv::takeArg(BLOCK);
 1339              		.loc 1 124 5
 1340              	.LVL97:
 1341              	.LBB62:
 1342              	.LBB63:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1343              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1344              		.loc 2 59 38 is_stmt 0
 1345              	#APP
 1346              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1347              		mv a4, a3
 1348              	# 0 "" 2
 1349              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1350              		.loc 2 60 38 is_stmt 0
 1351              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1352              		mv a3, a2
 1353              	# 0 "" 2
 1354              		.loc 2 61 9 is_stmt 1
GAS LISTING /tmp/cc2lxhOw.s 			page 31


  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1355              		.loc 2 61 38 is_stmt 0
 1356              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1357              		mv a2, a1
 1358              	# 0 "" 2
 1359              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1360              		.loc 2 62 38 is_stmt 0
 1361              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1362              		mv a1, a0
 1363              	# 0 "" 2
 1364              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1365              		.loc 2 63 49 is_stmt 0
 1366              	#NO_APP
 1367 0550 93075000 		li	a5,5
 1368              	#APP
 1369              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 1370              		mv a0, a5
 1371              	# 0 "" 2
 1372              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 1373              		.loc 2 64 34 is_stmt 0
 1374              	# 64 "src/../h/riscv.hpp" 1
 1375              		ecall
 1376              	# 0 "" 2
 1377              	.LVL98:
 1378              	#NO_APP
 1379              	.LBE63:
 1380              	.LBE62:
 125:src/syscall_c.cpp **** }
 1381              		.loc 1 125 1
 1382 055c 03348100 		ld	s0,8(sp)
 1383              		.cfi_restore 8
 1384              		.cfi_def_cfa 2, 16
 1385 0560 13010101 		addi	sp,sp,16
 1386              		.cfi_def_cfa_offset 0
 1387 0564 67800000 		jr	ra
 1388              		.cfi_endproc
 1389              	.LFE95:
 1391              		.align	2
 1392              		.globl	_Z12unblockInterv
 1394              	_Z12unblockInterv:
 1395              	.LFB96:
 126:src/syscall_c.cpp **** void unblockInter(){
 1396              		.loc 1 126 20 is_stmt 1
 1397              		.cfi_startproc
 1398 0568 130101FF 		addi	sp,sp,-16
 1399              		.cfi_def_cfa_offset 16
 1400 056c 23348100 		sd	s0,8(sp)
 1401              		.cfi_offset 8, -8
 1402 0570 13040101 		addi	s0,sp,16
 1403              		.cfi_def_cfa 8, 0
 127:src/syscall_c.cpp ****     Riscv::takeArg(UNBLOCK);
GAS LISTING /tmp/cc2lxhOw.s 			page 32


 1404              		.loc 1 127 5
 1405              	.LVL99:
 1406              	.LBB64:
 1407              	.LBB65:
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1408              		.loc 2 59 9
  59:src/../h/riscv.hpp ****         __asm__ volatile("mv a3, a2");
 1409              		.loc 2 59 38 is_stmt 0
 1410              	#APP
 1411              	# 59 "src/../h/riscv.hpp" 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1412              		mv a4, a3
 1413              	# 0 "" 2
 1414              		.loc 2 60 9 is_stmt 1
  60:src/../h/riscv.hpp ****         __asm__ volatile("mv a2, a1");
 1415              		.loc 2 60 38 is_stmt 0
 1416              	# 60 "src/../h/riscv.hpp" 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1417              		mv a3, a2
 1418              	# 0 "" 2
 1419              		.loc 2 61 9 is_stmt 1
  61:src/../h/riscv.hpp ****         __asm__ volatile("mv a1, a0");
 1420              		.loc 2 61 38 is_stmt 0
 1421              	# 61 "src/../h/riscv.hpp" 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1422              		mv a2, a1
 1423              	# 0 "" 2
 1424              		.loc 2 62 9 is_stmt 1
  62:src/../h/riscv.hpp ****         __asm__ volatile("mv a0, %0" : : "r"(c));
 1425              		.loc 2 62 38 is_stmt 0
 1426              	# 62 "src/../h/riscv.hpp" 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1427              		mv a1, a0
 1428              	# 0 "" 2
 1429              		.loc 2 63 9 is_stmt 1
  63:src/../h/riscv.hpp ****         __asm__ volatile("ecall");
 1430              		.loc 2 63 49 is_stmt 0
 1431              	#NO_APP
 1432 0584 93076000 		li	a5,6
 1433              	#APP
 1434              	# 63 "src/../h/riscv.hpp" 1
  64:src/../h/riscv.hpp ****     }
 1435              		mv a0, a5
 1436              	# 0 "" 2
 1437              		.loc 2 64 9 is_stmt 1
  64:src/../h/riscv.hpp ****     }
 1438              		.loc 2 64 34 is_stmt 0
 1439              	# 64 "src/../h/riscv.hpp" 1
 1440              		ecall
 1441              	# 0 "" 2
 1442              	.LVL100:
 1443              	#NO_APP
 1444              	.LBE65:
 1445              	.LBE64:
 128:src/syscall_c.cpp **** }...
 1446              		.loc 1 128 1
 1447 0590 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/cc2lxhOw.s 			page 33


 1448              		.cfi_restore 8
 1449              		.cfi_def_cfa 2, 16
 1450 0594 13010101 		addi	sp,sp,16
 1451              		.cfi_def_cfa_offset 0
 1452 0598 67800000 		jr	ra
 1453              		.cfi_endproc
 1454              	.LFE96:
 1456              	.Letext0:
 1457              		.file 3 "src/../h/../lib/hw.h"
 1458              		.file 4 "src/../h/syscall_c.h"
 1459              		.file 5 "src/../h/tcb.hpp"
 1460              		.file 6 "src/../h/_sem.hpp"
 1461              		.file 7 "src/../h/list.hpp"
 1462              		.file 8 "src/../h/_console.hpp"
 1463              		.file 9 "src/../h/../h/codes.hpp"
 1464              		.file 10 "src/../h/../test/printing.hpp"
GAS LISTING /tmp/cc2lxhOw.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/cc2lxhOw.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/cc2lxhOw.s:13     .text:0000000000000000 .L0 
     /tmp/cc2lxhOw.s:15     .text:0000000000000000 .L0 
     /tmp/cc2lxhOw.s:16     .text:0000000000000004 .L0 
     /tmp/cc2lxhOw.s:18     .text:0000000000000008 .L0 
     /tmp/cc2lxhOw.s:20     .text:000000000000000c .L0 
     /tmp/cc2lxhOw.s:22     .text:000000000000000c .L0 
     /tmp/cc2lxhOw.s:24     .text:0000000000000010 .L0 
     /tmp/cc2lxhOw.s:25     .text:0000000000000010 .L0 
     /tmp/cc2lxhOw.s:26     .text:0000000000000010 .L0 
     /tmp/cc2lxhOw.s:29     .text:0000000000000014 .L0 
     /tmp/cc2lxhOw.s:31     .text:0000000000000018 .L0 
     /tmp/cc2lxhOw.s:33     .text:000000000000001c .L0 
     /tmp/cc2lxhOw.s:34     .text:000000000000001c .L0 
     /tmp/cc2lxhOw.s:38     .text:0000000000000020 .L0 
   src/syscall_c.cpp:29     .text:0000000000000020 .L0 
     /tmp/cc2lxhOw.s:49     .text:0000000000000024 .L0 
     /tmp/cc2lxhOw.s:50     .text:0000000000000024 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000024 .L0 
     /tmp/cc2lxhOw.s:56     .text:0000000000000028 .L0 
  src/../h/riscv.hpp:60     .text:0000000000000028 .L0 
     /tmp/cc2lxhOw.s:61     .text:000000000000002c .L0 
  src/../h/riscv.hpp:61     .text:000000000000002c .L0 
     /tmp/cc2lxhOw.s:66     .text:0000000000000030 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000030 .L0 
     /tmp/cc2lxhOw.s:71     .text:0000000000000034 .L0 
     /tmp/cc2lxhOw.s:73     .text:0000000000000034 .L0 
     /tmp/cc2lxhOw.s:79     .text:000000000000003c .L0 
  src/../h/riscv.hpp:64     .text:000000000000003c .L0 
     /tmp/cc2lxhOw.s:88     .text:0000000000000040 .L0 
     /tmp/cc2lxhOw.s:89     .text:0000000000000040 .L0 
   src/syscall_c.cpp:32     .text:0000000000000040 .L0 
     /tmp/cc2lxhOw.s:98     .text:0000000000000044 .L0 
     /tmp/cc2lxhOw.s:99     .text:0000000000000044 .L0 
     /tmp/cc2lxhOw.s:100    .text:0000000000000048 .L0 
     /tmp/cc2lxhOw.s:101    .text:0000000000000048 .L0 
     /tmp/cc2lxhOw.s:102    .text:0000000000000048 .L0 
     /tmp/cc2lxhOw.s:104    .text:000000000000004c .L0 
     /tmp/cc2lxhOw.s:107    .text:0000000000000050 .L0 
     /tmp/cc2lxhOw.s:109    .text:0000000000000050 .L0 
     /tmp/cc2lxhOw.s:110    .text:0000000000000050 .L0 
     /tmp/cc2lxhOw.s:112    .text:0000000000000054 .L0 
     /tmp/cc2lxhOw.s:118    .text:000000000000005c .L0 
     /tmp/cc2lxhOw.s:121    .text:0000000000000064 .L0 
     /tmp/cc2lxhOw.s:127    .text:0000000000000064 _Z8mem_freePv
     /tmp/cc2lxhOw.s:130    .text:0000000000000064 .L0 
     /tmp/cc2lxhOw.s:132    .text:0000000000000064 .L0 
     /tmp/cc2lxhOw.s:133    .text:0000000000000064 .L0 
     /tmp/cc2lxhOw.s:135    .text:0000000000000068 .L0 
     /tmp/cc2lxhOw.s:136    .text:000000000000006c .L0 
     /tmp/cc2lxhOw.s:139    .text:0000000000000074 .L0 
     /tmp/cc2lxhOw.s:140    .text:0000000000000074 .L0 
     /tmp/cc2lxhOw.s:142    .text:0000000000000078 .L0 
     /tmp/cc2lxhOw.s:147    .text:0000000000000078 .L0 
     /tmp/cc2lxhOw.s:148    .text:0000000000000078 .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 35


  src/../h/riscv.hpp:59     .text:0000000000000078 .L0 
     /tmp/cc2lxhOw.s:154    .text:000000000000007c .L0 
  src/../h/riscv.hpp:60     .text:000000000000007c .L0 
     /tmp/cc2lxhOw.s:159    .text:0000000000000080 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000080 .L0 
     /tmp/cc2lxhOw.s:164    .text:0000000000000084 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000084 .L0 
     /tmp/cc2lxhOw.s:169    .text:0000000000000088 .L0 
     /tmp/cc2lxhOw.s:171    .text:0000000000000088 .L0 
     /tmp/cc2lxhOw.s:177    .text:0000000000000090 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000090 .L0 
     /tmp/cc2lxhOw.s:186    .text:0000000000000094 .L0 
     /tmp/cc2lxhOw.s:187    .text:0000000000000094 .L0 
     /tmp/cc2lxhOw.s:190    .text:000000000000009c .L0 
     /tmp/cc2lxhOw.s:192    .text:00000000000000a0 .L0 
     /tmp/cc2lxhOw.s:193    .text:00000000000000a4 .L0 
     /tmp/cc2lxhOw.s:195    .text:00000000000000a8 .L0 
     /tmp/cc2lxhOw.s:196    .text:00000000000000a8 .L0 
     /tmp/cc2lxhOw.s:198    .text:00000000000000ac .L0 
     /tmp/cc2lxhOw.s:203    .text:00000000000000b0 .L0 
     /tmp/cc2lxhOw.s:206    .text:00000000000000b4 .L0 
     /tmp/cc2lxhOw.s:207    .text:00000000000000b8 .L0 
     /tmp/cc2lxhOw.s:213    .text:00000000000000b8 _Z7userModv
     /tmp/cc2lxhOw.s:216    .text:00000000000000b8 .L0 
     /tmp/cc2lxhOw.s:217    .text:00000000000000b8 .L0 
     /tmp/cc2lxhOw.s:218    .text:00000000000000bc .L0 
     /tmp/cc2lxhOw.s:220    .text:00000000000000c0 .L0 
     /tmp/cc2lxhOw.s:222    .text:00000000000000c4 .L0 
     /tmp/cc2lxhOw.s:227    .text:00000000000000c4 .L0 
     /tmp/cc2lxhOw.s:228    .text:00000000000000c4 .L0 
  src/../h/riscv.hpp:59     .text:00000000000000c4 .L0 
     /tmp/cc2lxhOw.s:234    .text:00000000000000c8 .L0 
  src/../h/riscv.hpp:60     .text:00000000000000c8 .L0 
     /tmp/cc2lxhOw.s:239    .text:00000000000000cc .L0 
  src/../h/riscv.hpp:61     .text:00000000000000cc .L0 
     /tmp/cc2lxhOw.s:244    .text:00000000000000d0 .L0 
  src/../h/riscv.hpp:62     .text:00000000000000d0 .L0 
     /tmp/cc2lxhOw.s:249    .text:00000000000000d4 .L0 
     /tmp/cc2lxhOw.s:251    .text:00000000000000d4 .L0 
     /tmp/cc2lxhOw.s:257    .text:00000000000000dc .L0 
  src/../h/riscv.hpp:64     .text:00000000000000dc .L0 
     /tmp/cc2lxhOw.s:266    .text:00000000000000e0 .L0 
     /tmp/cc2lxhOw.s:267    .text:00000000000000e4 .L0 
     /tmp/cc2lxhOw.s:268    .text:00000000000000e4 .L0 
     /tmp/cc2lxhOw.s:270    .text:00000000000000e8 .L0 
     /tmp/cc2lxhOw.s:272    .text:00000000000000ec .L0 
     /tmp/cc2lxhOw.s:278    .text:00000000000000ec _Z10thread_arg5CodesPP3TCBPFvPvES3_
     /tmp/cc2lxhOw.s:281    .text:00000000000000ec .L0 
     /tmp/cc2lxhOw.s:283    .text:00000000000000ec .L0 
     /tmp/cc2lxhOw.s:284    .text:00000000000000f0 .L0 
     /tmp/cc2lxhOw.s:286    .text:00000000000000f4 .L0 
     /tmp/cc2lxhOw.s:288    .text:00000000000000f8 .L0 
     /tmp/cc2lxhOw.s:293    .text:00000000000000f8 .L0 
     /tmp/cc2lxhOw.s:294    .text:00000000000000f8 .L0 
  src/../h/riscv.hpp:59     .text:00000000000000f8 .L0 
     /tmp/cc2lxhOw.s:300    .text:00000000000000fc .L0 
  src/../h/riscv.hpp:60     .text:00000000000000fc .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 36


     /tmp/cc2lxhOw.s:305    .text:0000000000000100 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000100 .L0 
     /tmp/cc2lxhOw.s:310    .text:0000000000000104 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000104 .L0 
     /tmp/cc2lxhOw.s:315    .text:0000000000000108 .L0 
  src/../h/riscv.hpp:63     .text:0000000000000108 .L0 
     /tmp/cc2lxhOw.s:320    .text:000000000000010c .L0 
  src/../h/riscv.hpp:64     .text:000000000000010c .L0 
     /tmp/cc2lxhOw.s:329    .text:0000000000000110 .L0 
     /tmp/cc2lxhOw.s:330    .text:0000000000000110 .L0 
   src/syscall_c.cpp:47     .text:0000000000000110 .L0 
     /tmp/cc2lxhOw.s:337    .text:0000000000000114 .L0 
     /tmp/cc2lxhOw.s:339    .text:0000000000000114 .L0 
     /tmp/cc2lxhOw.s:342    .text:000000000000011c .L0 
     /tmp/cc2lxhOw.s:343    .text:000000000000011c .L0 
     /tmp/cc2lxhOw.s:345    .text:0000000000000120 .L0 
     /tmp/cc2lxhOw.s:347    .text:0000000000000124 .L0 
     /tmp/cc2lxhOw.s:353    .text:0000000000000124 _Z13thread_createPP3TCBPFvPvES2_
     /tmp/cc2lxhOw.s:356    .text:0000000000000124 .L0 
     /tmp/cc2lxhOw.s:358    .text:0000000000000124 .L0 
     /tmp/cc2lxhOw.s:359    .text:0000000000000124 .L0 
     /tmp/cc2lxhOw.s:361    .text:0000000000000128 .L0 
     /tmp/cc2lxhOw.s:362    .text:000000000000012c .L0 
     /tmp/cc2lxhOw.s:368    .text:0000000000000140 .L0 
     /tmp/cc2lxhOw.s:369    .text:0000000000000140 .L0 
     /tmp/cc2lxhOw.s:370    .text:0000000000000140 .L0 
     /tmp/cc2lxhOw.s:371    .text:0000000000000140 .L0 
     /tmp/cc2lxhOw.s:372    .text:0000000000000140 .L0 
     /tmp/cc2lxhOw.s:374    .text:0000000000000144 .L0 
     /tmp/cc2lxhOw.s:380    .text:0000000000000150 .L0 
     /tmp/cc2lxhOw.s:381    .text:0000000000000150 .L0 
     /tmp/cc2lxhOw.s:382    .text:0000000000000150 .L0 
     /tmp/cc2lxhOw.s:389    .text:0000000000000160 .L0 
     /tmp/cc2lxhOw.s:391    .text:0000000000000164 .L0 
     /tmp/cc2lxhOw.s:392    .text:0000000000000164 .L0 
     /tmp/cc2lxhOw.s:400    .text:0000000000000178 .L0 
     /tmp/cc2lxhOw.s:401    .text:000000000000017c .L0 
     /tmp/cc2lxhOw.s:403    .text:0000000000000180 .L0 
     /tmp/cc2lxhOw.s:404    .text:0000000000000180 .L0 
     /tmp/cc2lxhOw.s:406    .text:0000000000000184 .L0 
     /tmp/cc2lxhOw.s:409    .text:0000000000000188 .L0 
     /tmp/cc2lxhOw.s:412    .text:000000000000018c .L0 
     /tmp/cc2lxhOw.s:415    .text:0000000000000190 .L0 
     /tmp/cc2lxhOw.s:420    .text:0000000000000194 .L0 
     /tmp/cc2lxhOw.s:423    .text:0000000000000198 .L0 
     /tmp/cc2lxhOw.s:426    .text:000000000000019c .L0 
     /tmp/cc2lxhOw.s:427    .text:000000000000019c .L0 
     /tmp/cc2lxhOw.s:428    .text:000000000000019c .L0 
     /tmp/cc2lxhOw.s:429    .text:000000000000019c .L0 
     /tmp/cc2lxhOw.s:430    .text:000000000000019c .L0 
     /tmp/cc2lxhOw.s:431    .text:000000000000019c .L0 
     /tmp/cc2lxhOw.s:433    .text:000000000000019c .L0 
     /tmp/cc2lxhOw.s:436    .text:00000000000001a4 .L0 
     /tmp/cc2lxhOw.s:442    .text:00000000000001a4 _Z11thread_exitv
     /tmp/cc2lxhOw.s:445    .text:00000000000001a4 .L0 
     /tmp/cc2lxhOw.s:446    .text:00000000000001a4 .L0 
     /tmp/cc2lxhOw.s:447    .text:00000000000001a8 .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 37


     /tmp/cc2lxhOw.s:450    .text:00000000000001b0 .L0 
     /tmp/cc2lxhOw.s:451    .text:00000000000001b0 .L0 
     /tmp/cc2lxhOw.s:453    .text:00000000000001b4 .L0 
     /tmp/cc2lxhOw.s:458    .text:00000000000001b4 .L0 
     /tmp/cc2lxhOw.s:459    .text:00000000000001b4 .L0 
  src/../h/riscv.hpp:59     .text:00000000000001b4 .L0 
     /tmp/cc2lxhOw.s:465    .text:00000000000001b8 .L0 
  src/../h/riscv.hpp:60     .text:00000000000001b8 .L0 
     /tmp/cc2lxhOw.s:470    .text:00000000000001bc .L0 
  src/../h/riscv.hpp:61     .text:00000000000001bc .L0 
     /tmp/cc2lxhOw.s:475    .text:00000000000001c0 .L0 
  src/../h/riscv.hpp:62     .text:00000000000001c0 .L0 
     /tmp/cc2lxhOw.s:480    .text:00000000000001c4 .L0 
     /tmp/cc2lxhOw.s:482    .text:00000000000001c4 .L0 
     /tmp/cc2lxhOw.s:488    .text:00000000000001cc .L0 
  src/../h/riscv.hpp:64     .text:00000000000001cc .L0 
     /tmp/cc2lxhOw.s:497    .text:00000000000001d0 .L0 
     /tmp/cc2lxhOw.s:498    .text:00000000000001d0 .L0 
     /tmp/cc2lxhOw.s:501    .text:00000000000001d8 .L0 
     /tmp/cc2lxhOw.s:503    .text:00000000000001e0 .L0 
     /tmp/cc2lxhOw.s:505    .text:00000000000001e4 .L0 
     /tmp/cc2lxhOw.s:506    .text:00000000000001e4 .L0 
     /tmp/cc2lxhOw.s:508    .text:00000000000001e8 .L0 
     /tmp/cc2lxhOw.s:510    .text:00000000000001ec .L0 
     /tmp/cc2lxhOw.s:521    .text:00000000000001ec _Z15thread_dispatchv
     /tmp/cc2lxhOw.s:524    .text:00000000000001ec .L0 
     /tmp/cc2lxhOw.s:525    .text:00000000000001ec .L0 
     /tmp/cc2lxhOw.s:526    .text:00000000000001f0 .L0 
     /tmp/cc2lxhOw.s:529    .text:00000000000001f8 .L0 
     /tmp/cc2lxhOw.s:530    .text:00000000000001f8 .L0 
     /tmp/cc2lxhOw.s:532    .text:00000000000001fc .L0 
     /tmp/cc2lxhOw.s:537    .text:00000000000001fc .L0 
     /tmp/cc2lxhOw.s:538    .text:00000000000001fc .L0 
  src/../h/riscv.hpp:59     .text:00000000000001fc .L0 
     /tmp/cc2lxhOw.s:544    .text:0000000000000200 .L0 
  src/../h/riscv.hpp:60     .text:0000000000000200 .L0 
     /tmp/cc2lxhOw.s:549    .text:0000000000000204 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000204 .L0 
     /tmp/cc2lxhOw.s:554    .text:0000000000000208 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000208 .L0 
     /tmp/cc2lxhOw.s:559    .text:000000000000020c .L0 
     /tmp/cc2lxhOw.s:561    .text:000000000000020c .L0 
     /tmp/cc2lxhOw.s:567    .text:0000000000000214 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000214 .L0 
     /tmp/cc2lxhOw.s:576    .text:0000000000000218 .L0 
     /tmp/cc2lxhOw.s:577    .text:0000000000000218 .L0 
     /tmp/cc2lxhOw.s:581    .text:0000000000000228 .L0 
     /tmp/cc2lxhOw.s:582    .text:000000000000022c .L0 
     /tmp/cc2lxhOw.s:584    .text:0000000000000230 .L0 
     /tmp/cc2lxhOw.s:585    .text:0000000000000230 .L0 
     /tmp/cc2lxhOw.s:587    .text:0000000000000234 .L0 
     /tmp/cc2lxhOw.s:589    .text:0000000000000238 .L0 
     /tmp/cc2lxhOw.s:595    .text:0000000000000238 _Z8sem_openPP3Semj
     /tmp/cc2lxhOw.s:598    .text:0000000000000238 .L0 
     /tmp/cc2lxhOw.s:600    .text:0000000000000238 .L0 
     /tmp/cc2lxhOw.s:601    .text:0000000000000238 .L0 
     /tmp/cc2lxhOw.s:603    .text:000000000000023c .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 38


     /tmp/cc2lxhOw.s:604    .text:0000000000000240 .L0 
     /tmp/cc2lxhOw.s:607    .text:0000000000000248 .L0 
     /tmp/cc2lxhOw.s:608    .text:0000000000000248 .L0 
     /tmp/cc2lxhOw.s:610    .text:000000000000024c .L0 
     /tmp/cc2lxhOw.s:615    .text:000000000000024c .L0 
     /tmp/cc2lxhOw.s:616    .text:000000000000024c .L0 
  src/../h/riscv.hpp:59     .text:000000000000024c .L0 
     /tmp/cc2lxhOw.s:622    .text:0000000000000250 .L0 
  src/../h/riscv.hpp:60     .text:0000000000000250 .L0 
     /tmp/cc2lxhOw.s:627    .text:0000000000000254 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000254 .L0 
     /tmp/cc2lxhOw.s:632    .text:0000000000000258 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000258 .L0 
     /tmp/cc2lxhOw.s:637    .text:000000000000025c .L0 
     /tmp/cc2lxhOw.s:639    .text:000000000000025c .L0 
     /tmp/cc2lxhOw.s:645    .text:0000000000000264 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000264 .L0 
     /tmp/cc2lxhOw.s:654    .text:0000000000000268 .L0 
     /tmp/cc2lxhOw.s:655    .text:0000000000000268 .L0 
     /tmp/cc2lxhOw.s:658    .text:0000000000000270 .L0 
     /tmp/cc2lxhOw.s:660    .text:0000000000000274 .L0 
     /tmp/cc2lxhOw.s:661    .text:0000000000000278 .L0 
     /tmp/cc2lxhOw.s:663    .text:000000000000027c .L0 
     /tmp/cc2lxhOw.s:664    .text:000000000000027c .L0 
     /tmp/cc2lxhOw.s:666    .text:0000000000000280 .L0 
     /tmp/cc2lxhOw.s:671    .text:0000000000000284 .L0 
     /tmp/cc2lxhOw.s:674    .text:0000000000000288 .L0 
     /tmp/cc2lxhOw.s:675    .text:000000000000028c .L0 
     /tmp/cc2lxhOw.s:681    .text:000000000000028c _Z9sem_closeP3Sem
     /tmp/cc2lxhOw.s:684    .text:000000000000028c .L0 
     /tmp/cc2lxhOw.s:686    .text:000000000000028c .L0 
     /tmp/cc2lxhOw.s:687    .text:000000000000028c .L0 
     /tmp/cc2lxhOw.s:689    .text:0000000000000290 .L0 
     /tmp/cc2lxhOw.s:690    .text:0000000000000294 .L0 
     /tmp/cc2lxhOw.s:693    .text:000000000000029c .L0 
     /tmp/cc2lxhOw.s:694    .text:000000000000029c .L0 
     /tmp/cc2lxhOw.s:696    .text:00000000000002a0 .L0 
     /tmp/cc2lxhOw.s:701    .text:00000000000002a0 .L0 
     /tmp/cc2lxhOw.s:702    .text:00000000000002a0 .L0 
  src/../h/riscv.hpp:59     .text:00000000000002a0 .L0 
     /tmp/cc2lxhOw.s:708    .text:00000000000002a4 .L0 
  src/../h/riscv.hpp:60     .text:00000000000002a4 .L0 
     /tmp/cc2lxhOw.s:713    .text:00000000000002a8 .L0 
  src/../h/riscv.hpp:61     .text:00000000000002a8 .L0 
     /tmp/cc2lxhOw.s:718    .text:00000000000002ac .L0 
  src/../h/riscv.hpp:62     .text:00000000000002ac .L0 
     /tmp/cc2lxhOw.s:723    .text:00000000000002b0 .L0 
     /tmp/cc2lxhOw.s:725    .text:00000000000002b0 .L0 
     /tmp/cc2lxhOw.s:731    .text:00000000000002b8 .L0 
  src/../h/riscv.hpp:64     .text:00000000000002b8 .L0 
     /tmp/cc2lxhOw.s:740    .text:00000000000002bc .L0 
     /tmp/cc2lxhOw.s:741    .text:00000000000002bc .L0 
     /tmp/cc2lxhOw.s:744    .text:00000000000002c4 .L0 
     /tmp/cc2lxhOw.s:746    .text:00000000000002c8 .L0 
     /tmp/cc2lxhOw.s:747    .text:00000000000002cc .L0 
     /tmp/cc2lxhOw.s:749    .text:00000000000002d0 .L0 
     /tmp/cc2lxhOw.s:750    .text:00000000000002d0 .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 39


     /tmp/cc2lxhOw.s:752    .text:00000000000002d4 .L0 
     /tmp/cc2lxhOw.s:757    .text:00000000000002d8 .L0 
     /tmp/cc2lxhOw.s:760    .text:00000000000002dc .L0 
     /tmp/cc2lxhOw.s:761    .text:00000000000002e0 .L0 
     /tmp/cc2lxhOw.s:767    .text:00000000000002e0 _Z8sem_waitP3Sem
     /tmp/cc2lxhOw.s:770    .text:00000000000002e0 .L0 
     /tmp/cc2lxhOw.s:772    .text:00000000000002e0 .L0 
     /tmp/cc2lxhOw.s:773    .text:00000000000002e0 .L0 
     /tmp/cc2lxhOw.s:775    .text:00000000000002e4 .L0 
     /tmp/cc2lxhOw.s:776    .text:00000000000002e8 .L0 
     /tmp/cc2lxhOw.s:779    .text:00000000000002f0 .L0 
     /tmp/cc2lxhOw.s:780    .text:00000000000002f0 .L0 
     /tmp/cc2lxhOw.s:782    .text:00000000000002f4 .L0 
     /tmp/cc2lxhOw.s:787    .text:00000000000002f4 .L0 
     /tmp/cc2lxhOw.s:788    .text:00000000000002f4 .L0 
  src/../h/riscv.hpp:59     .text:00000000000002f4 .L0 
     /tmp/cc2lxhOw.s:794    .text:00000000000002f8 .L0 
  src/../h/riscv.hpp:60     .text:00000000000002f8 .L0 
     /tmp/cc2lxhOw.s:799    .text:00000000000002fc .L0 
  src/../h/riscv.hpp:61     .text:00000000000002fc .L0 
     /tmp/cc2lxhOw.s:804    .text:0000000000000300 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000300 .L0 
     /tmp/cc2lxhOw.s:809    .text:0000000000000304 .L0 
     /tmp/cc2lxhOw.s:811    .text:0000000000000304 .L0 
     /tmp/cc2lxhOw.s:817    .text:000000000000030c .L0 
  src/../h/riscv.hpp:64     .text:000000000000030c .L0 
     /tmp/cc2lxhOw.s:826    .text:0000000000000310 .L0 
     /tmp/cc2lxhOw.s:827    .text:0000000000000310 .L0 
     /tmp/cc2lxhOw.s:832    .text:0000000000000320 .L0 
     /tmp/cc2lxhOw.s:833    .text:0000000000000320 .L0 
     /tmp/cc2lxhOw.s:836    .text:0000000000000328 .L0 
     /tmp/cc2lxhOw.s:838    .text:000000000000032c .L0 
     /tmp/cc2lxhOw.s:839    .text:0000000000000330 .L0 
     /tmp/cc2lxhOw.s:841    .text:0000000000000334 .L0 
     /tmp/cc2lxhOw.s:842    .text:0000000000000334 .L0 
     /tmp/cc2lxhOw.s:844    .text:0000000000000338 .L0 
     /tmp/cc2lxhOw.s:849    .text:000000000000033c .L0 
     /tmp/cc2lxhOw.s:852    .text:0000000000000340 .L0 
     /tmp/cc2lxhOw.s:853    .text:0000000000000344 .L0 
     /tmp/cc2lxhOw.s:859    .text:0000000000000344 _Z10sem_signalP3Sem
     /tmp/cc2lxhOw.s:862    .text:0000000000000344 .L0 
     /tmp/cc2lxhOw.s:864    .text:0000000000000344 .L0 
     /tmp/cc2lxhOw.s:865    .text:0000000000000344 .L0 
     /tmp/cc2lxhOw.s:867    .text:0000000000000348 .L0 
     /tmp/cc2lxhOw.s:868    .text:000000000000034c .L0 
     /tmp/cc2lxhOw.s:871    .text:0000000000000354 .L0 
     /tmp/cc2lxhOw.s:872    .text:0000000000000354 .L0 
     /tmp/cc2lxhOw.s:874    .text:0000000000000358 .L0 
     /tmp/cc2lxhOw.s:879    .text:0000000000000358 .L0 
     /tmp/cc2lxhOw.s:880    .text:0000000000000358 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000358 .L0 
     /tmp/cc2lxhOw.s:886    .text:000000000000035c .L0 
  src/../h/riscv.hpp:60     .text:000000000000035c .L0 
     /tmp/cc2lxhOw.s:891    .text:0000000000000360 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000360 .L0 
     /tmp/cc2lxhOw.s:896    .text:0000000000000364 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000364 .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 40


     /tmp/cc2lxhOw.s:901    .text:0000000000000368 .L0 
     /tmp/cc2lxhOw.s:903    .text:0000000000000368 .L0 
     /tmp/cc2lxhOw.s:909    .text:0000000000000370 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000370 .L0 
     /tmp/cc2lxhOw.s:918    .text:0000000000000374 .L0 
     /tmp/cc2lxhOw.s:919    .text:0000000000000374 .L0 
     /tmp/cc2lxhOw.s:922    .text:000000000000037c .L0 
     /tmp/cc2lxhOw.s:924    .text:0000000000000380 .L0 
     /tmp/cc2lxhOw.s:925    .text:0000000000000384 .L0 
     /tmp/cc2lxhOw.s:927    .text:0000000000000388 .L0 
     /tmp/cc2lxhOw.s:928    .text:0000000000000388 .L0 
     /tmp/cc2lxhOw.s:930    .text:000000000000038c .L0 
     /tmp/cc2lxhOw.s:935    .text:0000000000000390 .L0 
     /tmp/cc2lxhOw.s:938    .text:0000000000000394 .L0 
     /tmp/cc2lxhOw.s:939    .text:0000000000000398 .L0 
     /tmp/cc2lxhOw.s:945    .text:0000000000000398 _Z11thread_makePP3TCBPFvPvES2_
     /tmp/cc2lxhOw.s:948    .text:0000000000000398 .L0 
     /tmp/cc2lxhOw.s:950    .text:0000000000000398 .L0 
     /tmp/cc2lxhOw.s:951    .text:0000000000000398 .L0 
     /tmp/cc2lxhOw.s:953    .text:000000000000039c .L0 
     /tmp/cc2lxhOw.s:954    .text:00000000000003a0 .L0 
     /tmp/cc2lxhOw.s:960    .text:00000000000003b4 .L0 
     /tmp/cc2lxhOw.s:961    .text:00000000000003b4 .L0 
     /tmp/cc2lxhOw.s:962    .text:00000000000003b4 .L0 
     /tmp/cc2lxhOw.s:963    .text:00000000000003b4 .L0 
     /tmp/cc2lxhOw.s:964    .text:00000000000003b4 .L0 
     /tmp/cc2lxhOw.s:966    .text:00000000000003b8 .L0 
     /tmp/cc2lxhOw.s:972    .text:00000000000003c4 .L0 
     /tmp/cc2lxhOw.s:973    .text:00000000000003c4 .L0 
     /tmp/cc2lxhOw.s:974    .text:00000000000003c4 .L0 
     /tmp/cc2lxhOw.s:981    .text:00000000000003d4 .L0 
     /tmp/cc2lxhOw.s:983    .text:00000000000003d8 .L0 
     /tmp/cc2lxhOw.s:984    .text:00000000000003d8 .L0 
     /tmp/cc2lxhOw.s:992    .text:00000000000003ec .L0 
     /tmp/cc2lxhOw.s:993    .text:00000000000003f0 .L0 
     /tmp/cc2lxhOw.s:995    .text:00000000000003f4 .L0 
     /tmp/cc2lxhOw.s:996    .text:00000000000003f4 .L0 
     /tmp/cc2lxhOw.s:998    .text:00000000000003f8 .L0 
     /tmp/cc2lxhOw.s:1001   .text:00000000000003fc .L0 
     /tmp/cc2lxhOw.s:1004   .text:0000000000000400 .L0 
     /tmp/cc2lxhOw.s:1007   .text:0000000000000404 .L0 
     /tmp/cc2lxhOw.s:1012   .text:0000000000000408 .L0 
     /tmp/cc2lxhOw.s:1015   .text:000000000000040c .L0 
     /tmp/cc2lxhOw.s:1018   .text:0000000000000410 .L0 
     /tmp/cc2lxhOw.s:1019   .text:0000000000000410 .L0 
     /tmp/cc2lxhOw.s:1020   .text:0000000000000410 .L0 
     /tmp/cc2lxhOw.s:1021   .text:0000000000000410 .L0 
     /tmp/cc2lxhOw.s:1022   .text:0000000000000410 .L0 
     /tmp/cc2lxhOw.s:1023   .text:0000000000000410 .L0 
     /tmp/cc2lxhOw.s:1025   .text:0000000000000410 .L0 
     /tmp/cc2lxhOw.s:1028   .text:0000000000000418 .L0 
     /tmp/cc2lxhOw.s:1034   .text:0000000000000418 _Z10time_sleepm
     /tmp/cc2lxhOw.s:1037   .text:0000000000000418 .L0 
     /tmp/cc2lxhOw.s:1039   .text:0000000000000418 .L0 
     /tmp/cc2lxhOw.s:1040   .text:000000000000041c .L0 
     /tmp/cc2lxhOw.s:1043   .text:0000000000000424 .L0 
     /tmp/cc2lxhOw.s:1044   .text:0000000000000424 .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 41


     /tmp/cc2lxhOw.s:1046   .text:0000000000000428 .L0 
     /tmp/cc2lxhOw.s:1051   .text:0000000000000428 .L0 
     /tmp/cc2lxhOw.s:1052   .text:0000000000000428 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000428 .L0 
     /tmp/cc2lxhOw.s:1058   .text:000000000000042c .L0 
  src/../h/riscv.hpp:60     .text:000000000000042c .L0 
     /tmp/cc2lxhOw.s:1063   .text:0000000000000430 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000430 .L0 
     /tmp/cc2lxhOw.s:1068   .text:0000000000000434 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000434 .L0 
     /tmp/cc2lxhOw.s:1073   .text:0000000000000438 .L0 
     /tmp/cc2lxhOw.s:1075   .text:0000000000000438 .L0 
     /tmp/cc2lxhOw.s:1081   .text:0000000000000440 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000440 .L0 
     /tmp/cc2lxhOw.s:1090   .text:0000000000000444 .L0 
     /tmp/cc2lxhOw.s:1091   .text:0000000000000444 .L0 
     /tmp/cc2lxhOw.s:1096   .text:0000000000000454 .L0 
     /tmp/cc2lxhOw.s:1097   .text:0000000000000454 .L0 
     /tmp/cc2lxhOw.s:1100   .text:000000000000045c .L0 
     /tmp/cc2lxhOw.s:1102   .text:0000000000000464 .L0 
     /tmp/cc2lxhOw.s:1104   .text:0000000000000468 .L0 
     /tmp/cc2lxhOw.s:1105   .text:0000000000000468 .L0 
     /tmp/cc2lxhOw.s:1107   .text:000000000000046c .L0 
     /tmp/cc2lxhOw.s:1109   .text:0000000000000470 .L0 
     /tmp/cc2lxhOw.s:1115   .text:0000000000000470 _Z4getcv
     /tmp/cc2lxhOw.s:1118   .text:0000000000000470 .L0 
     /tmp/cc2lxhOw.s:1119   .text:0000000000000470 .L0 
     /tmp/cc2lxhOw.s:1120   .text:0000000000000474 .L0 
     /tmp/cc2lxhOw.s:1123   .text:000000000000047c .L0 
     /tmp/cc2lxhOw.s:1124   .text:000000000000047c .L0 
     /tmp/cc2lxhOw.s:1126   .text:0000000000000480 .L0 
     /tmp/cc2lxhOw.s:1131   .text:0000000000000480 .L0 
     /tmp/cc2lxhOw.s:1132   .text:0000000000000480 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000480 .L0 
     /tmp/cc2lxhOw.s:1138   .text:0000000000000484 .L0 
  src/../h/riscv.hpp:60     .text:0000000000000484 .L0 
     /tmp/cc2lxhOw.s:1143   .text:0000000000000488 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000488 .L0 
     /tmp/cc2lxhOw.s:1148   .text:000000000000048c .L0 
  src/../h/riscv.hpp:62     .text:000000000000048c .L0 
     /tmp/cc2lxhOw.s:1153   .text:0000000000000490 .L0 
     /tmp/cc2lxhOw.s:1155   .text:0000000000000490 .L0 
     /tmp/cc2lxhOw.s:1161   .text:0000000000000498 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000498 .L0 
     /tmp/cc2lxhOw.s:1170   .text:000000000000049c .L0 
     /tmp/cc2lxhOw.s:1171   .text:000000000000049c .L0 
     /tmp/cc2lxhOw.s:1174   .text:00000000000004a4 .L0 
     /tmp/cc2lxhOw.s:1176   .text:00000000000004ac .L0 
     /tmp/cc2lxhOw.s:1178   .text:00000000000004b0 .L0 
     /tmp/cc2lxhOw.s:1179   .text:00000000000004b0 .L0 
     /tmp/cc2lxhOw.s:1181   .text:00000000000004b4 .L0 
     /tmp/cc2lxhOw.s:1183   .text:00000000000004b8 .L0 
     /tmp/cc2lxhOw.s:1189   .text:00000000000004b8 _Z4putcc
     /tmp/cc2lxhOw.s:1192   .text:00000000000004b8 .L0 
     /tmp/cc2lxhOw.s:1194   .text:00000000000004b8 .L0 
     /tmp/cc2lxhOw.s:1195   .text:00000000000004bc .L0 
     /tmp/cc2lxhOw.s:1197   .text:00000000000004c0 .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 42


     /tmp/cc2lxhOw.s:1199   .text:00000000000004c4 .L0 
     /tmp/cc2lxhOw.s:1204   .text:00000000000004c4 .L0 
     /tmp/cc2lxhOw.s:1205   .text:00000000000004c4 .L0 
  src/../h/riscv.hpp:59     .text:00000000000004c4 .L0 
     /tmp/cc2lxhOw.s:1211   .text:00000000000004c8 .L0 
  src/../h/riscv.hpp:60     .text:00000000000004c8 .L0 
     /tmp/cc2lxhOw.s:1216   .text:00000000000004cc .L0 
  src/../h/riscv.hpp:61     .text:00000000000004cc .L0 
     /tmp/cc2lxhOw.s:1221   .text:00000000000004d0 .L0 
  src/../h/riscv.hpp:62     .text:00000000000004d0 .L0 
     /tmp/cc2lxhOw.s:1226   .text:00000000000004d4 .L0 
     /tmp/cc2lxhOw.s:1228   .text:00000000000004d4 .L0 
     /tmp/cc2lxhOw.s:1234   .text:00000000000004dc .L0 
  src/../h/riscv.hpp:64     .text:00000000000004dc .L0 
     /tmp/cc2lxhOw.s:1243   .text:00000000000004e0 .L0 
     /tmp/cc2lxhOw.s:1244   .text:00000000000004e4 .L0 
     /tmp/cc2lxhOw.s:1245   .text:00000000000004e4 .L0 
     /tmp/cc2lxhOw.s:1247   .text:00000000000004e8 .L0 
     /tmp/cc2lxhOw.s:1249   .text:00000000000004ec .L0 
     /tmp/cc2lxhOw.s:1255   .text:00000000000004ec _Z11getThreadIdv
     /tmp/cc2lxhOw.s:1258   .text:00000000000004ec .L0 
     /tmp/cc2lxhOw.s:1259   .text:00000000000004ec .L0 
     /tmp/cc2lxhOw.s:1260   .text:00000000000004f0 .L0 
     /tmp/cc2lxhOw.s:1263   .text:00000000000004f8 .L0 
     /tmp/cc2lxhOw.s:1264   .text:00000000000004f8 .L0 
     /tmp/cc2lxhOw.s:1266   .text:00000000000004fc .L0 
     /tmp/cc2lxhOw.s:1271   .text:00000000000004fc .L0 
     /tmp/cc2lxhOw.s:1272   .text:00000000000004fc .L0 
  src/../h/riscv.hpp:59     .text:00000000000004fc .L0 
     /tmp/cc2lxhOw.s:1278   .text:0000000000000500 .L0 
  src/../h/riscv.hpp:60     .text:0000000000000500 .L0 
     /tmp/cc2lxhOw.s:1283   .text:0000000000000504 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000504 .L0 
     /tmp/cc2lxhOw.s:1288   .text:0000000000000508 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000508 .L0 
     /tmp/cc2lxhOw.s:1293   .text:000000000000050c .L0 
     /tmp/cc2lxhOw.s:1295   .text:000000000000050c .L0 
     /tmp/cc2lxhOw.s:1301   .text:0000000000000514 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000514 .L0 
     /tmp/cc2lxhOw.s:1310   .text:0000000000000518 .L0 
     /tmp/cc2lxhOw.s:1311   .text:0000000000000518 .L0 
     /tmp/cc2lxhOw.s:1314   .text:0000000000000520 .L0 
     /tmp/cc2lxhOw.s:1316   .text:0000000000000528 .L0 
     /tmp/cc2lxhOw.s:1318   .text:000000000000052c .L0 
     /tmp/cc2lxhOw.s:1319   .text:000000000000052c .L0 
     /tmp/cc2lxhOw.s:1321   .text:0000000000000530 .L0 
     /tmp/cc2lxhOw.s:1323   .text:0000000000000534 .L0 
     /tmp/cc2lxhOw.s:1329   .text:0000000000000534 _Z10blockInterv
     /tmp/cc2lxhOw.s:1332   .text:0000000000000534 .L0 
     /tmp/cc2lxhOw.s:1333   .text:0000000000000534 .L0 
     /tmp/cc2lxhOw.s:1334   .text:0000000000000538 .L0 
     /tmp/cc2lxhOw.s:1336   .text:000000000000053c .L0 
     /tmp/cc2lxhOw.s:1338   .text:0000000000000540 .L0 
     /tmp/cc2lxhOw.s:1343   .text:0000000000000540 .L0 
     /tmp/cc2lxhOw.s:1344   .text:0000000000000540 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000540 .L0 
     /tmp/cc2lxhOw.s:1350   .text:0000000000000544 .L0 
GAS LISTING /tmp/cc2lxhOw.s 			page 43


  src/../h/riscv.hpp:60     .text:0000000000000544 .L0 
     /tmp/cc2lxhOw.s:1355   .text:0000000000000548 .L0 
  src/../h/riscv.hpp:61     .text:0000000000000548 .L0 
     /tmp/cc2lxhOw.s:1360   .text:000000000000054c .L0 
  src/../h/riscv.hpp:62     .text:000000000000054c .L0 
     /tmp/cc2lxhOw.s:1365   .text:0000000000000550 .L0 
     /tmp/cc2lxhOw.s:1367   .text:0000000000000550 .L0 
     /tmp/cc2lxhOw.s:1373   .text:0000000000000558 .L0 
  src/../h/riscv.hpp:64     .text:0000000000000558 .L0 
     /tmp/cc2lxhOw.s:1382   .text:000000000000055c .L0 
     /tmp/cc2lxhOw.s:1383   .text:0000000000000560 .L0 
     /tmp/cc2lxhOw.s:1384   .text:0000000000000560 .L0 
     /tmp/cc2lxhOw.s:1386   .text:0000000000000564 .L0 
     /tmp/cc2lxhOw.s:1388   .text:0000000000000568 .L0 
     /tmp/cc2lxhOw.s:1394   .text:0000000000000568 _Z12unblockInterv
     /tmp/cc2lxhOw.s:1397   .text:0000000000000568 .L0 
     /tmp/cc2lxhOw.s:1398   .text:0000000000000568 .L0 
     /tmp/cc2lxhOw.s:1399   .text:000000000000056c .L0 
     /tmp/cc2lxhOw.s:1401   .text:0000000000000570 .L0 
     /tmp/cc2lxhOw.s:1403   .text:0000000000000574 .L0 
     /tmp/cc2lxhOw.s:1408   .text:0000000000000574 .L0 
     /tmp/cc2lxhOw.s:1409   .text:0000000000000574 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000574 .L0 
     /tmp/cc2lxhOw.s:1415   .text:0000000000000578 .L0 
  src/../h/riscv.hpp:60     .text:0000000000000578 .L0 
     /tmp/cc2lxhOw.s:1420   .text:000000000000057c .L0 
  src/../h/riscv.hpp:61     .text:000000000000057c .L0 
     /tmp/cc2lxhOw.s:1425   .text:0000000000000580 .L0 
  src/../h/riscv.hpp:62     .text:0000000000000580 .L0 
     /tmp/cc2lxhOw.s:1430   .text:0000000000000584 .L0 
     /tmp/cc2lxhOw.s:1432   .text:0000000000000584 .L0 
     /tmp/cc2lxhOw.s:1438   .text:000000000000058c .L0 
  src/../h/riscv.hpp:64     .text:000000000000058c .L0 
     /tmp/cc2lxhOw.s:1447   .text:0000000000000590 .L0 
     /tmp/cc2lxhOw.s:1448   .text:0000000000000594 .L0 
     /tmp/cc2lxhOw.s:1449   .text:0000000000000594 .L0 
     /tmp/cc2lxhOw.s:1451   .text:0000000000000598 .L0 
     /tmp/cc2lxhOw.s:1453   .text:000000000000059c .L0 
     /tmp/cc2lxhOw.s:1465   .text:000000000000059c .L0 
     /tmp/cc2lxhOw.s:515    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc2lxhOw.s:577    .text:0000000000000218 .L0 
     /tmp/cc2lxhOw.s:827    .text:0000000000000310 .L0 
     /tmp/cc2lxhOw.s:1091   .text:0000000000000444 .L0 
     /tmp/cc2lxhOw.s:116    .text:000000000000005c .L5
     /tmp/cc2lxhOw.s:106    .text:0000000000000050 .L3
     /tmp/cc2lxhOw.s:36     .text:0000000000000020 .L4
     /tmp/cc2lxhOw.s:97     .text:0000000000000044 .L1
     /tmp/cc2lxhOw.s:201    .text:00000000000000b0 .L9
     /tmp/cc2lxhOw.s:418    .text:0000000000000194 .L20
     /tmp/cc2lxhOw.s:425    .text:000000000000019c .L21
     /tmp/cc2lxhOw.s:398    .text:0000000000000178 .L19
     /tmp/cc2lxhOw.s:669    .text:0000000000000284 .L32
     /tmp/cc2lxhOw.s:755    .text:00000000000002d8 .L39
     /tmp/cc2lxhOw.s:847    .text:000000000000033c .L46
     /tmp/cc2lxhOw.s:933    .text:0000000000000390 .L53
     /tmp/cc2lxhOw.s:1010   .text:0000000000000408 .L60
     /tmp/cc2lxhOw.s:1017   .text:0000000000000410 .L61
GAS LISTING /tmp/cc2lxhOw.s 			page 44


     /tmp/cc2lxhOw.s:990    .text:00000000000003ec .L59
     /tmp/cc2lxhOw.s:4029   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc2lxhOw.s:6234   .debug_str:0000000000000d23 .LASF268
     /tmp/cc2lxhOw.s:5938   .debug_str:0000000000000549 .LASF269
     /tmp/cc2lxhOw.s:6182   .debug_str:0000000000000bc9 .LASF270
     /tmp/cc2lxhOw.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc2lxhOw.s:1456   .text:000000000000059c .Letext0
     /tmp/cc2lxhOw.s:5766   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc2lxhOw.s:5816   .debug_str:000000000000016a .LASF0
     /tmp/cc2lxhOw.s:6280   .debug_str:0000000000000f2d .LASF1
     /tmp/cc2lxhOw.s:6238   .debug_str:0000000000000dfa .LASF2
     /tmp/cc2lxhOw.s:6200   .debug_str:0000000000000c54 .LASF4
     /tmp/cc2lxhOw.s:6210   .debug_str:0000000000000c8a .LASF3
     /tmp/cc2lxhOw.s:5956   .debug_str:00000000000005be .LASF5
     /tmp/cc2lxhOw.s:6036   .debug_str:00000000000007ec .LASF6
     /tmp/cc2lxhOw.s:6008   .debug_str:00000000000006fc .LASF7
     /tmp/cc2lxhOw.s:6144   .debug_str:0000000000000a8c .LASF8
     /tmp/cc2lxhOw.s:5844   .debug_str:000000000000023b .LASF9
     /tmp/cc2lxhOw.s:6270   .debug_str:0000000000000ed7 .LASF10
     /tmp/cc2lxhOw.s:5960   .debug_str:00000000000005d5 .LASF11
     /tmp/cc2lxhOw.s:5880   .debug_str:0000000000000362 .LASF12
     /tmp/cc2lxhOw.s:6038   .debug_str:00000000000007f3 .LASF13
     /tmp/cc2lxhOw.s:5966   .debug_str:00000000000005f7 .LASF14
     /tmp/cc2lxhOw.s:5824   .debug_str:00000000000001ae .LASF15
     /tmp/cc2lxhOw.s:5972   .debug_str:000000000000061b .LASF16
     /tmp/cc2lxhOw.s:5924   .debug_str:0000000000000502 .LASF17
     /tmp/cc2lxhOw.s:5804   .debug_str:0000000000000115 .LASF271
     /tmp/cc2lxhOw.s:5922   .debug_str:00000000000004f8 .LASF18
     /tmp/cc2lxhOw.s:6290   .debug_str:0000000000000f6b .LASF19
     /tmp/cc2lxhOw.s:6074   .debug_str:00000000000008c9 .LASF20
     /tmp/cc2lxhOw.s:6040   .debug_str:0000000000000803 .LASF21
     /tmp/cc2lxhOw.s:6112   .debug_str:00000000000009b8 .LASF22
     /tmp/cc2lxhOw.s:6168   .debug_str:0000000000000b80 .LASF23
     /tmp/cc2lxhOw.s:6242   .debug_str:0000000000000e14 .LASF24
     /tmp/cc2lxhOw.s:6248   .debug_str:0000000000000e4c .LASF25
     /tmp/cc2lxhOw.s:6164   .debug_str:0000000000000b6b .LASF26
     /tmp/cc2lxhOw.s:6028   .debug_str:00000000000007b5 .LASF27
     /tmp/cc2lxhOw.s:6050   .debug_str:0000000000000839 .LASF28
     /tmp/cc2lxhOw.s:6188   .debug_str:0000000000000c18 .LASF29
     /tmp/cc2lxhOw.s:6010   .debug_str:000000000000070f .LASF30
     /tmp/cc2lxhOw.s:6194   .debug_str:0000000000000c2d .LASF31
     /tmp/cc2lxhOw.s:5782   .debug_str:0000000000000081 .LASF32
     /tmp/cc2lxhOw.s:6042   .debug_str:000000000000080a .LASF33
     /tmp/cc2lxhOw.s:5780   .debug_str:000000000000007c .LASF34
     /tmp/cc2lxhOw.s:5944   .debug_str:000000000000056e .LASF35
     /tmp/cc2lxhOw.s:6142   .debug_str:0000000000000a84 .LASF91
     /tmp/cc2lxhOw.s:5948   .debug_str:000000000000058f .LASF36
     /tmp/cc2lxhOw.s:6098   .debug_str:0000000000000970 .LASF37
     /tmp/cc2lxhOw.s:6208   .debug_str:0000000000000c84 .LASF38
     /tmp/cc2lxhOw.s:6320   .debug_str:0000000000001048 .LASF93
     /tmp/cc2lxhOw.s:6288   .debug_str:0000000000000f66 .LASF39
     /tmp/cc2lxhOw.s:6100   .debug_str:0000000000000978 .LASF41
     /tmp/cc2lxhOw.s:6240   .debug_str:0000000000000e08 .LASF43
     /tmp/cc2lxhOw.s:6128   .debug_str:0000000000000a19 .LASF45
     /tmp/cc2lxhOw.s:5936   .debug_str:000000000000053c .LASF40
     /tmp/cc2lxhOw.s:5868   .debug_str:0000000000000307 .LASF42
     /tmp/cc2lxhOw.s:5980   .debug_str:0000000000000652 .LASF272
GAS LISTING /tmp/cc2lxhOw.s 			page 45


     /tmp/cc2lxhOw.s:6004   .debug_str:00000000000006ec .LASF49
     /tmp/cc2lxhOw.s:6314   .debug_str:000000000000100e .LASF51
     /tmp/cc2lxhOw.s:6262   .debug_str:0000000000000e95 .LASF44
     /tmp/cc2lxhOw.s:6272   .debug_str:0000000000000ee5 .LASF46
     /tmp/cc2lxhOw.s:6000   .debug_str:00000000000006cd .LASF47
     /tmp/cc2lxhOw.s:6214   .debug_str:0000000000000ca6 .LASF48
     /tmp/cc2lxhOw.s:6056   .debug_str:0000000000000854 .LASF63
     /tmp/cc2lxhOw.s:5896   .debug_str:00000000000003f4 .LASF65
     /tmp/cc2lxhOw.s:5854   .debug_str:00000000000002a2 .LASF50
     /tmp/cc2lxhOw.s:6046   .debug_str:0000000000000818 .LASF52
     /tmp/cc2lxhOw.s:5842   .debug_str:000000000000022f .LASF175
     /tmp/cc2lxhOw.s:5852   .debug_str:000000000000028b .LASF177
     /tmp/cc2lxhOw.s:5954   .debug_str:00000000000005b1 .LASF53
     /tmp/cc2lxhOw.s:6150   .debug_str:0000000000000acd .LASF54
     /tmp/cc2lxhOw.s:6294   .debug_str:0000000000000f86 .LASF69
     /tmp/cc2lxhOw.s:6122   .debug_str:0000000000000a00 .LASF55
     /tmp/cc2lxhOw.s:5996   .debug_str:00000000000006a9 .LASF56
     /tmp/cc2lxhOw.s:5774   .debug_str:000000000000003f .LASF57
     /tmp/cc2lxhOw.s:6134   .debug_str:0000000000000a4e .LASF58
     /tmp/cc2lxhOw.s:6116   .debug_str:00000000000009d8 .LASF59
     /tmp/cc2lxhOw.s:5828   .debug_str:00000000000001bf .LASF60
     /tmp/cc2lxhOw.s:5912   .debug_str:00000000000004a9 .LASF61
     /tmp/cc2lxhOw.s:6180   .debug_str:0000000000000bbc .LASF62
     /tmp/cc2lxhOw.s:6254   .debug_str:0000000000000e64 .LASF64
     /tmp/cc2lxhOw.s:5772   .debug_str:000000000000002e .LASF66
     /tmp/cc2lxhOw.s:5984   .debug_str:0000000000000661 .LASF67
     /tmp/cc2lxhOw.s:6094   .debug_str:0000000000000949 .LASF68
     /tmp/cc2lxhOw.s:6126   .debug_str:0000000000000a14 .LASF70
     /tmp/cc2lxhOw.s:5962   .debug_str:00000000000005e4 .LASF71
     /tmp/cc2lxhOw.s:5878   .debug_str:000000000000034e .LASF72
     /tmp/cc2lxhOw.s:5836   .debug_str:00000000000001f2 .LASF73
     /tmp/cc2lxhOw.s:5910   .debug_str:0000000000000482 .LASF74
     /tmp/cc2lxhOw.s:5846   .debug_str:000000000000024b .LASF75
     /tmp/cc2lxhOw.s:6154   .debug_str:0000000000000b03 .LASF76
     /tmp/cc2lxhOw.s:6206   .debug_str:0000000000000c78 .LASF77
     /tmp/cc2lxhOw.s:6080   .debug_str:00000000000008f1 .LASF78
     /tmp/cc2lxhOw.s:5906   .debug_str:0000000000000466 .LASF79
     /tmp/cc2lxhOw.s:6058   .debug_str:000000000000085a .LASF80
     /tmp/cc2lxhOw.s:6186   .debug_str:0000000000000bff .LASF81
     /tmp/cc2lxhOw.s:5884   .debug_str:000000000000038d .LASF82
     /tmp/cc2lxhOw.s:5858   .debug_str:00000000000002b7 .LASF83
     /tmp/cc2lxhOw.s:6068   .debug_str:000000000000089d .LASF84
     /tmp/cc2lxhOw.s:6226   .debug_str:0000000000000ce1 .LASF85
     /tmp/cc2lxhOw.s:6192   .debug_str:0000000000000c27 .LASF86
     /tmp/cc2lxhOw.s:5796   .debug_str:00000000000000dd .LASF87
     /tmp/cc2lxhOw.s:5800   .debug_str:0000000000000101 .LASF88
     /tmp/cc2lxhOw.s:5968   .debug_str:0000000000000607 .LASF89
     /tmp/cc2lxhOw.s:6246   .debug_str:0000000000000e3b .LASF90
     /tmp/cc2lxhOw.s:6266   .debug_str:0000000000000eb4 .LASF92
     /tmp/cc2lxhOw.s:5902   .debug_str:0000000000000435 .LASF94
     /tmp/cc2lxhOw.s:6044   .debug_str:000000000000080f .LASF95
     /tmp/cc2lxhOw.s:6110   .debug_str:00000000000009a5 .LASF97
     /tmp/cc2lxhOw.s:5994   .debug_str:000000000000069d .LASF144
     /tmp/cc2lxhOw.s:5886   .debug_str:0000000000000399 .LASF273
     /tmp/cc2lxhOw.s:6312   .debug_str:0000000000001000 .LASF96
     /tmp/cc2lxhOw.s:6244   .debug_str:0000000000000e22 .LASF98
     /tmp/cc2lxhOw.s:6170   .debug_str:0000000000000b88 .LASF99
GAS LISTING /tmp/cc2lxhOw.s 			page 46


     /tmp/cc2lxhOw.s:6322   .debug_str:000000000000105d .LASF274
     /tmp/cc2lxhOw.s:6222   .debug_str:0000000000000cd3 .LASF100
     /tmp/cc2lxhOw.s:6092   .debug_str:000000000000093d .LASF101
     /tmp/cc2lxhOw.s:6104   .debug_str:000000000000098d .LASF102
     /tmp/cc2lxhOw.s:6018   .debug_str:000000000000073f .LASF103
     /tmp/cc2lxhOw.s:5806   .debug_str:000000000000011b .LASF104
     /tmp/cc2lxhOw.s:6264   .debug_str:0000000000000ea3 .LASF105
     /tmp/cc2lxhOw.s:5934   .debug_str:0000000000000536 .LASF106
     /tmp/cc2lxhOw.s:5814   .debug_str:0000000000000159 .LASF107
     /tmp/cc2lxhOw.s:5990   .debug_str:000000000000068c .LASF108
     /tmp/cc2lxhOw.s:6132   .debug_str:0000000000000a42 .LASF109
     /tmp/cc2lxhOw.s:6204   .debug_str:0000000000000c6b .LASF110
     /tmp/cc2lxhOw.s:6012   .debug_str:0000000000000718 .LASF111
     /tmp/cc2lxhOw.s:6014   .debug_str:0000000000000725 .LASF112
     /tmp/cc2lxhOw.s:5958   .debug_str:00000000000005c5 .LASF113
     /tmp/cc2lxhOw.s:6172   .debug_str:0000000000000b8e .LASF114
     /tmp/cc2lxhOw.s:6276   .debug_str:0000000000000f0e .LASF115
     /tmp/cc2lxhOw.s:5856   .debug_str:00000000000002af .LASF116
     /tmp/cc2lxhOw.s:6196   .debug_str:0000000000000c38 .LASF117
     /tmp/cc2lxhOw.s:5830   .debug_str:00000000000001cc .LASF118
     /tmp/cc2lxhOw.s:5862   .debug_str:00000000000002e6 .LASF119
     /tmp/cc2lxhOw.s:6006   .debug_str:00000000000006f7 .LASF120
     /tmp/cc2lxhOw.s:6274   .debug_str:0000000000000f04 .LASF121
     /tmp/cc2lxhOw.s:6218   .debug_str:0000000000000cc3 .LASF275
     /tmp/cc2lxhOw.s:5826   .debug_str:00000000000001ba .LASF122
     /tmp/cc2lxhOw.s:6252   .debug_str:0000000000000e5f .LASF123
     /tmp/cc2lxhOw.s:6084   .debug_str:000000000000091e .LASF124
     /tmp/cc2lxhOw.s:5920   .debug_str:00000000000004f0 .LASF125
     /tmp/cc2lxhOw.s:5918   .debug_str:00000000000004d6 .LASF126
     /tmp/cc2lxhOw.s:6166   .debug_str:0000000000000b7b .LASF127
     /tmp/cc2lxhOw.s:6002   .debug_str:00000000000006d9 .LASF128
     /tmp/cc2lxhOw.s:6286   .debug_str:0000000000000f4f .LASF129
     /tmp/cc2lxhOw.s:6082   .debug_str:0000000000000914 .LASF229
     /tmp/cc2lxhOw.s:5848   .debug_str:0000000000000256 .LASF231
     /tmp/cc2lxhOw.s:5776   .debug_str:000000000000004f .LASF130
     /tmp/cc2lxhOw.s:5784   .debug_str:000000000000008c .LASF131
     /tmp/cc2lxhOw.s:6054   .debug_str:000000000000084c .LASF132
     /tmp/cc2lxhOw.s:6026   .debug_str:0000000000000799 .LASF133
     /tmp/cc2lxhOw.s:6120   .debug_str:00000000000009f4 .LASF134
     /tmp/cc2lxhOw.s:6152   .debug_str:0000000000000ae5 .LASF135
     /tmp/cc2lxhOw.s:5802   .debug_str:000000000000010b .LASF136
     /tmp/cc2lxhOw.s:5840   .debug_str:0000000000000214 .LASF137
     /tmp/cc2lxhOw.s:6310   .debug_str:0000000000000ff5 .LASF138
     /tmp/cc2lxhOw.s:5798   .debug_str:00000000000000e4 .LASF139
     /tmp/cc2lxhOw.s:5904   .debug_str:000000000000045d .LASF140
     /tmp/cc2lxhOw.s:6114   .debug_str:00000000000009be .LASF141
     /tmp/cc2lxhOw.s:6072   .debug_str:00000000000008c4 .LASF142
     /tmp/cc2lxhOw.s:6086   .debug_str:0000000000000923 .LASF143
     /tmp/cc2lxhOw.s:5992   .debug_str:0000000000000698 .LASF145
     /tmp/cc2lxhOw.s:5928   .debug_str:000000000000051d .LASF146
     /tmp/cc2lxhOw.s:5872   .debug_str:0000000000000334 .LASF147
     /tmp/cc2lxhOw.s:5810   .debug_str:000000000000013b .LASF148
     /tmp/cc2lxhOw.s:6230   .debug_str:0000000000000cf8 .LASF149
     /tmp/cc2lxhOw.s:6184   .debug_str:0000000000000bee .LASF150
     /tmp/cc2lxhOw.s:5790   .debug_str:00000000000000be .LASF151
     /tmp/cc2lxhOw.s:6060   .debug_str:0000000000000867 .LASF152
     /tmp/cc2lxhOw.s:6030   .debug_str:00000000000007c1 .LASF153
GAS LISTING /tmp/cc2lxhOw.s 			page 47


     /tmp/cc2lxhOw.s:5890   .debug_str:00000000000003c1 .LASF154
     /tmp/cc2lxhOw.s:5932   .debug_str:000000000000052c .LASF155
     /tmp/cc2lxhOw.s:6300   .debug_str:0000000000000fa4 .LASF156
     /tmp/cc2lxhOw.s:5870   .debug_str:000000000000032b .LASF157
     /tmp/cc2lxhOw.s:5946   .debug_str:0000000000000577 .LASF158
     /tmp/cc2lxhOw.s:6224   .debug_str:0000000000000cd8 .LASF159
     /tmp/cc2lxhOw.s:5998   .debug_str:00000000000006b5 .LASF160
     /tmp/cc2lxhOw.s:5874   .debug_str:000000000000033d .LASF161
     /tmp/cc2lxhOw.s:5812   .debug_str:0000000000000142 .LASF162
     /tmp/cc2lxhOw.s:5866   .debug_str:0000000000000301 .LASF163
     /tmp/cc2lxhOw.s:5820   .debug_str:000000000000018b .LASF164
     /tmp/cc2lxhOw.s:6146   .debug_str:0000000000000a9f .LASF165
     /tmp/cc2lxhOw.s:6278   .debug_str:0000000000000f1e .LASF166
     /tmp/cc2lxhOw.s:5986   .debug_str:000000000000066b .LASF167
     /tmp/cc2lxhOw.s:6088   .debug_str:000000000000092c .LASF168
     /tmp/cc2lxhOw.s:5860   .debug_str:00000000000002ce .LASF169
     /tmp/cc2lxhOw.s:6034   .debug_str:00000000000007e0 .LASF170
     /tmp/cc2lxhOw.s:5894   .debug_str:00000000000003d9 .LASF171
     /tmp/cc2lxhOw.s:5916   .debug_str:00000000000004cf .LASF172
     /tmp/cc2lxhOw.s:6296   .debug_str:0000000000000f8e .LASF173
     /tmp/cc2lxhOw.s:5850   .debug_str:000000000000026d .LASF174
     /tmp/cc2lxhOw.s:6106   .debug_str:0000000000000992 .LASF176
     /tmp/cc2lxhOw.s:5808   .debug_str:0000000000000122 .LASF178
     /tmp/cc2lxhOw.s:6236   .debug_str:0000000000000de7 .LASF179
     /tmp/cc2lxhOw.s:6024   .debug_str:0000000000000779 .LASF180
     /tmp/cc2lxhOw.s:6220   .debug_str:0000000000000cc8 .LASF181
     /tmp/cc2lxhOw.s:6078   .debug_str:00000000000008d8 .LASF182
     /tmp/cc2lxhOw.s:5794   .debug_str:00000000000000d5 .LASF183
     /tmp/cc2lxhOw.s:6140   .debug_str:0000000000000a6b .LASF184
     /tmp/cc2lxhOw.s:6212   .debug_str:0000000000000c9c .LASF185
     /tmp/cc2lxhOw.s:6158   .debug_str:0000000000000b33 .LASF186
     /tmp/cc2lxhOw.s:6302   .debug_str:0000000000000fb5 .LASF187
     /tmp/cc2lxhOw.s:6268   .debug_str:0000000000000ec2 .LASF188
     /tmp/cc2lxhOw.s:5876   .debug_str:0000000000000345 .LASF189
     /tmp/cc2lxhOw.s:5838   .debug_str:00000000000001ff .LASF190
     /tmp/cc2lxhOw.s:5892   .debug_str:00000000000003d2 .LASF191
     /tmp/cc2lxhOw.s:5908   .debug_str:000000000000046f .LASF192
     /tmp/cc2lxhOw.s:5950   .debug_str:0000000000000594 .LASF193
     /tmp/cc2lxhOw.s:5832   .debug_str:00000000000001d4 .LASF194
     /tmp/cc2lxhOw.s:6282   .debug_str:0000000000000f40 .LASF195
     /tmp/cc2lxhOw.s:6178   .debug_str:0000000000000ba8 .LASF196
     /tmp/cc2lxhOw.s:6176   .debug_str:0000000000000ba0 .LASF197
     /tmp/cc2lxhOw.s:5864   .debug_str:00000000000002ed .LASF198
     /tmp/cc2lxhOw.s:6138   .debug_str:0000000000000a63 .LASF199
     /tmp/cc2lxhOw.s:5770   .debug_str:000000000000001a .LASF200
     /tmp/cc2lxhOw.s:6048   .debug_str:0000000000000831 .LASF201
     /tmp/cc2lxhOw.s:6016   .debug_str:000000000000072b .LASF202
     /tmp/cc2lxhOw.s:6250   .debug_str:0000000000000e58 .LASF203
     /tmp/cc2lxhOw.s:6096   .debug_str:000000000000095d .LASF204
     /tmp/cc2lxhOw.s:6298   .debug_str:0000000000000f9d .LASF205
     /tmp/cc2lxhOw.s:6232   .debug_str:0000000000000d10 .LASF206
     /tmp/cc2lxhOw.s:6076   .debug_str:00000000000008d2 .LASF207
     /tmp/cc2lxhOw.s:6292   .debug_str:0000000000000f74 .LASF208
     /tmp/cc2lxhOw.s:6216   .debug_str:0000000000000cbd .LASF209
     /tmp/cc2lxhOw.s:6130   .debug_str:0000000000000a30 .LASF210
     /tmp/cc2lxhOw.s:6032   .debug_str:00000000000007d3 .LASF211
     /tmp/cc2lxhOw.s:5768   .debug_str:0000000000000000 .LASF212
GAS LISTING /tmp/cc2lxhOw.s 			page 48


     /tmp/cc2lxhOw.s:6156   .debug_str:0000000000000b28 .LASF213
     /tmp/cc2lxhOw.s:6304   .debug_str:0000000000000fbe .LASF214
     /tmp/cc2lxhOw.s:5834   .debug_str:00000000000001e7 .LASF215
     /tmp/cc2lxhOw.s:6318   .debug_str:0000000000001030 .LASF216
     /tmp/cc2lxhOw.s:5964   .debug_str:00000000000005ed .LASF217
     /tmp/cc2lxhOw.s:5952   .debug_str:000000000000059b .LASF218
     /tmp/cc2lxhOw.s:6198   .debug_str:0000000000000c4a .LASF219
     /tmp/cc2lxhOw.s:6020   .debug_str:000000000000074e .LASF220
     /tmp/cc2lxhOw.s:6160   .debug_str:0000000000000b49 .LASF221
     /tmp/cc2lxhOw.s:5882   .debug_str:0000000000000371 .LASF222
     /tmp/cc2lxhOw.s:5792   .debug_str:00000000000000cf .LASF223
     /tmp/cc2lxhOw.s:6124   .debug_str:0000000000000a0d .LASF224
     /tmp/cc2lxhOw.s:6306   .debug_str:0000000000000fd6 .LASF225
     /tmp/cc2lxhOw.s:6308   .debug_str:0000000000000fe3 .LASF226
     /tmp/cc2lxhOw.s:1395   .text:0000000000000568 .LFB96
     /tmp/cc2lxhOw.s:1454   .text:000000000000059c .LFE96
     /tmp/cc2lxhOw.s:1406   .text:0000000000000574 .LBB64
     /tmp/cc2lxhOw.s:1445   .text:0000000000000590 .LBE64
     /tmp/cc2lxhOw.s:5181   .debug_loc:0000000000000000 .LLST34
     /tmp/cc2lxhOw.s:6064   .debug_str:0000000000000882 .LASF227
     /tmp/cc2lxhOw.s:5900   .debug_str:0000000000000425 .LASF228
     /tmp/cc2lxhOw.s:1330   .text:0000000000000534 .LFB95
     /tmp/cc2lxhOw.s:1389   .text:0000000000000568 .LFE95
     /tmp/cc2lxhOw.s:1341   .text:0000000000000540 .LBB62
     /tmp/cc2lxhOw.s:1380   .text:000000000000055c .LBE62
     /tmp/cc2lxhOw.s:5189   .debug_loc:0000000000000024 .LLST33
     /tmp/cc2lxhOw.s:5788   .debug_str:00000000000000b2 .LASF230
     /tmp/cc2lxhOw.s:6258   .debug_str:0000000000000e73 .LASF232
     /tmp/cc2lxhOw.s:1256   .text:00000000000004ec .LFB94
     /tmp/cc2lxhOw.s:1324   .text:0000000000000534 .LFE94
     /tmp/cc2lxhOw.s:1269   .text:00000000000004fc .LBB60
     /tmp/cc2lxhOw.s:1308   .text:0000000000000518 .LBE60
     /tmp/cc2lxhOw.s:5197   .debug_loc:0000000000000048 .LLST32
     /tmp/cc2lxhOw.s:1312   .text:0000000000000520 .LVL96
     /tmp/cc2lxhOw.s:5940   .debug_str:000000000000055b .LASF233
     /tmp/cc2lxhOw.s:6136   .debug_str:0000000000000a5a .LASF234
     /tmp/cc2lxhOw.s:1190   .text:00000000000004b8 .LFB93
     /tmp/cc2lxhOw.s:1250   .text:00000000000004ec .LFE93
     /tmp/cc2lxhOw.s:1202   .text:00000000000004c4 .LBB58
     /tmp/cc2lxhOw.s:1241   .text:00000000000004e0 .LBE58
     /tmp/cc2lxhOw.s:5205   .debug_loc:000000000000006c .LLST31
     /tmp/cc2lxhOw.s:6190   .debug_str:0000000000000c22 .LASF235
     /tmp/cc2lxhOw.s:6102   .debug_str:0000000000000984 .LASF236
     /tmp/cc2lxhOw.s:1116   .text:0000000000000470 .LFB92
     /tmp/cc2lxhOw.s:1184   .text:00000000000004b8 .LFE92
     /tmp/cc2lxhOw.s:1129   .text:0000000000000480 .LBB56
     /tmp/cc2lxhOw.s:1168   .text:000000000000049c .LBE56
     /tmp/cc2lxhOw.s:5214   .debug_loc:0000000000000091 .LLST30
     /tmp/cc2lxhOw.s:1172   .text:00000000000004a4 .LVL90
     /tmp/cc2lxhOw.s:5970   .debug_str:0000000000000610 .LASF237
     /tmp/cc2lxhOw.s:6066   .debug_str:000000000000088d .LASF238
     /tmp/cc2lxhOw.s:1035   .text:0000000000000418 .LFB91
     /tmp/cc2lxhOw.s:1110   .text:0000000000000470 .LFE91
     /tmp/cc2lxhOw.s:5926   .debug_str:0000000000000518 .LASF239
     /tmp/cc2lxhOw.s:5223   .debug_loc:00000000000000b6 .LLST28
     /tmp/cc2lxhOw.s:1049   .text:0000000000000428 .LBB54
     /tmp/cc2lxhOw.s:1088   .text:0000000000000444 .LBE54
GAS LISTING /tmp/cc2lxhOw.s 			page 49


     /tmp/cc2lxhOw.s:5237   .debug_loc:00000000000000ef .LLST29
     /tmp/cc2lxhOw.s:1094   .text:0000000000000454 .LVL86
     /tmp/cc2lxhOw.s:1098   .text:000000000000045c .LVL87
     /tmp/cc2lxhOw.s:6174   .debug_str:0000000000000b94 .LASF240
     /tmp/cc2lxhOw.s:6070   .debug_str:00000000000008a5 .LASF241
     /tmp/cc2lxhOw.s:946    .text:0000000000000398 .LFB90
     /tmp/cc2lxhOw.s:1029   .text:0000000000000418 .LFE90
     /tmp/cc2lxhOw.s:6284   .debug_str:0000000000000f48 .LASF242
     /tmp/cc2lxhOw.s:5246   .debug_loc:0000000000000114 .LLST24
     /tmp/cc2lxhOw.s:5974   .debug_str:0000000000000631 .LASF243
     /tmp/cc2lxhOw.s:5279   .debug_loc:000000000000019c .LLST25
     /tmp/cc2lxhOw.s:5305   .debug_loc:000000000000020e .LLST26
     /tmp/cc2lxhOw.s:5331   .debug_loc:0000000000000280 .LLST27
     /tmp/cc2lxhOw.s:977    .text:00000000000003d0 .LVL71
     /tmp/cc2lxhOw.s:989    .text:00000000000003ec .LVL74
     /tmp/cc2lxhOw.s:5976   .debug_str:0000000000000639 .LASF244
     /tmp/cc2lxhOw.s:5818   .debug_str:0000000000000177 .LASF245
     /tmp/cc2lxhOw.s:860    .text:0000000000000344 .LFB89
     /tmp/cc2lxhOw.s:940    .text:0000000000000398 .LFE89
     /tmp/cc2lxhOw.s:5355   .debug_loc:00000000000002f0 .LLST22
     /tmp/cc2lxhOw.s:877    .text:0000000000000358 .LBB52
     /tmp/cc2lxhOw.s:916    .text:0000000000000374 .LBE52
     /tmp/cc2lxhOw.s:5380   .debug_loc:0000000000000352 .LLST23
     /tmp/cc2lxhOw.s:920    .text:000000000000037c .LVL65
     /tmp/cc2lxhOw.s:6062   .debug_str:0000000000000879 .LASF246
     /tmp/cc2lxhOw.s:6260   .debug_str:0000000000000e84 .LASF247
     /tmp/cc2lxhOw.s:768    .text:00000000000002e0 .LFB88
     /tmp/cc2lxhOw.s:854    .text:0000000000000344 .LFE88
     /tmp/cc2lxhOw.s:5389   .debug_loc:0000000000000377 .LLST20
     /tmp/cc2lxhOw.s:785    .text:00000000000002f4 .LBB50
     /tmp/cc2lxhOw.s:824    .text:0000000000000310 .LBE50
     /tmp/cc2lxhOw.s:5414   .debug_loc:00000000000003d9 .LLST21
     /tmp/cc2lxhOw.s:830    .text:0000000000000320 .LVL58
     /tmp/cc2lxhOw.s:834    .text:0000000000000328 .LVL59
     /tmp/cc2lxhOw.s:6052   .debug_str:0000000000000842 .LASF248
     /tmp/cc2lxhOw.s:6228   .debug_str:0000000000000ce6 .LASF249
     /tmp/cc2lxhOw.s:682    .text:000000000000028c .LFB87
     /tmp/cc2lxhOw.s:762    .text:00000000000002e0 .LFE87
     /tmp/cc2lxhOw.s:5423   .debug_loc:00000000000003fe .LLST18
     /tmp/cc2lxhOw.s:699    .text:00000000000002a0 .LBB48
     /tmp/cc2lxhOw.s:738    .text:00000000000002bc .LBE48
     /tmp/cc2lxhOw.s:5448   .debug_loc:0000000000000460 .LLST19
     /tmp/cc2lxhOw.s:742    .text:00000000000002c4 .LVL51
     /tmp/cc2lxhOw.s:6090   .debug_str:0000000000000934 .LASF250
     /tmp/cc2lxhOw.s:5914   .debug_str:00000000000004bc .LASF251
     /tmp/cc2lxhOw.s:596    .text:0000000000000238 .LFB86
     /tmp/cc2lxhOw.s:676    .text:000000000000028c .LFE86
     /tmp/cc2lxhOw.s:5457   .debug_loc:0000000000000485 .LLST15
     /tmp/cc2lxhOw.s:5930   .debug_str:0000000000000527 .LASF252
     /tmp/cc2lxhOw.s:5482   .debug_loc:00000000000004e7 .LLST16
     /tmp/cc2lxhOw.s:613    .text:000000000000024c .LBB46
     /tmp/cc2lxhOw.s:652    .text:0000000000000268 .LBE46
     /tmp/cc2lxhOw.s:5500   .debug_loc:0000000000000533 .LLST17
     /tmp/cc2lxhOw.s:656    .text:0000000000000270 .LVL45
     /tmp/cc2lxhOw.s:6202   .debug_str:0000000000000c5b .LASF253
     /tmp/cc2lxhOw.s:6022   .debug_str:0000000000000764 .LASF254
     /tmp/cc2lxhOw.s:522    .text:00000000000001ec .LFB85
GAS LISTING /tmp/cc2lxhOw.s 			page 50


     /tmp/cc2lxhOw.s:590    .text:0000000000000238 .LFE85
     /tmp/cc2lxhOw.s:535    .text:00000000000001fc .LBB44
     /tmp/cc2lxhOw.s:574    .text:0000000000000218 .LBE44
     /tmp/cc2lxhOw.s:5509   .debug_loc:0000000000000558 .LLST14
     /tmp/cc2lxhOw.s:579    .text:0000000000000228 .LVL41
     /tmp/cc2lxhOw.s:5888   .debug_str:00000000000003b0 .LASF255
     /tmp/cc2lxhOw.s:443    .text:00000000000001a4 .LFB84
     /tmp/cc2lxhOw.s:511    .text:00000000000001ec .LFE84
     /tmp/cc2lxhOw.s:456    .text:00000000000001b4 .LBB42
     /tmp/cc2lxhOw.s:495    .text:00000000000001d0 .LBE42
     /tmp/cc2lxhOw.s:5517   .debug_loc:000000000000057c .LLST13
     /tmp/cc2lxhOw.s:499    .text:00000000000001d8 .LVL38
     /tmp/cc2lxhOw.s:5822   .debug_str:00000000000001a0 .LASF256
     /tmp/cc2lxhOw.s:5898   .debug_str:0000000000000404 .LASF257
     /tmp/cc2lxhOw.s:354    .text:0000000000000124 .LFB83
     /tmp/cc2lxhOw.s:437    .text:00000000000001a4 .LFE83
     /tmp/cc2lxhOw.s:5525   .debug_loc:00000000000005a0 .LLST9
     /tmp/cc2lxhOw.s:5558   .debug_loc:0000000000000628 .LLST10
     /tmp/cc2lxhOw.s:5584   .debug_loc:000000000000069a .LLST11
     /tmp/cc2lxhOw.s:5610   .debug_loc:000000000000070c .LLST12
     /tmp/cc2lxhOw.s:385    .text:000000000000015c .LVL25
     /tmp/cc2lxhOw.s:397    .text:0000000000000178 .LVL28
     /tmp/cc2lxhOw.s:6316   .debug_str:0000000000001025 .LASF258
     /tmp/cc2lxhOw.s:5778   .debug_str:0000000000000058 .LASF259
     /tmp/cc2lxhOw.s:279    .text:00000000000000ec .LFB82
     /tmp/cc2lxhOw.s:348    .text:0000000000000124 .LFE82
     /tmp/cc2lxhOw.s:5988   .debug_str:0000000000000687 .LASF260
     /tmp/cc2lxhOw.s:5634   .debug_loc:000000000000077c .LLST6
     /tmp/cc2lxhOw.s:5648   .debug_loc:00000000000007b5 .LLST7
     /tmp/cc2lxhOw.s:291    .text:00000000000000f8 .LBB40
     /tmp/cc2lxhOw.s:327    .text:0000000000000110 .LBE40
     /tmp/cc2lxhOw.s:5655   .debug_loc:00000000000007d8 .LLST8
     /tmp/cc2lxhOw.s:6256   .debug_str:0000000000000e6b .LASF261
     /tmp/cc2lxhOw.s:6118   .debug_str:00000000000009e8 .LASF262
     /tmp/cc2lxhOw.s:214    .text:00000000000000b8 .LFB81
     /tmp/cc2lxhOw.s:273    .text:00000000000000ec .LFE81
     /tmp/cc2lxhOw.s:225    .text:00000000000000c4 .LBB38
     /tmp/cc2lxhOw.s:264    .text:00000000000000e0 .LBE38
     /tmp/cc2lxhOw.s:5662   .debug_loc:00000000000007fb .LLST5
     /tmp/cc2lxhOw.s:5786   .debug_str:00000000000000a9 .LASF263
     /tmp/cc2lxhOw.s:5978   .debug_str:0000000000000644 .LASF264
     /tmp/cc2lxhOw.s:128    .text:0000000000000064 .LFB80
     /tmp/cc2lxhOw.s:208    .text:00000000000000b8 .LFE80
     /tmp/cc2lxhOw.s:5670   .debug_loc:000000000000081f .LLST3
     /tmp/cc2lxhOw.s:145    .text:0000000000000078 .LBB36
     /tmp/cc2lxhOw.s:184    .text:0000000000000094 .LBE36
     /tmp/cc2lxhOw.s:5695   .debug_loc:0000000000000881 .LLST4
     /tmp/cc2lxhOw.s:188    .text:000000000000009c .LVL12
     /tmp/cc2lxhOw.s:5982   .debug_str:0000000000000657 .LASF265
     /tmp/cc2lxhOw.s:5942   .debug_str:0000000000000560 .LASF266
     /tmp/cc2lxhOw.s:10     .text:0000000000000000 .LFB79
     /tmp/cc2lxhOw.s:122    .text:0000000000000064 .LFE79
     /tmp/cc2lxhOw.s:5703   .debug_loc:00000000000008a5 .LLST0
     /tmp/cc2lxhOw.s:6108   .debug_str:000000000000099e .LASF267
     /tmp/cc2lxhOw.s:5734   .debug_loc:000000000000091c .LLST1
     /tmp/cc2lxhOw.s:46     .text:0000000000000024 .LBB34
     /tmp/cc2lxhOw.s:86     .text:0000000000000040 .LBE34
GAS LISTING /tmp/cc2lxhOw.s 			page 51


     /tmp/cc2lxhOw.s:5745   .debug_loc:0000000000000952 .LLST2
     /tmp/cc2lxhOw.s:6162   .debug_str:0000000000000b58 .LASF276
     /tmp/cc2lxhOw.s:6148   .debug_str:0000000000000ac1 .LASF277
     /tmp/cc2lxhOw.s:1405   .text:0000000000000574 .LVL99
     /tmp/cc2lxhOw.s:1442   .text:0000000000000590 .LVL100
     /tmp/cc2lxhOw.s:1340   .text:0000000000000540 .LVL97
     /tmp/cc2lxhOw.s:1377   .text:000000000000055c .LVL98
     /tmp/cc2lxhOw.s:1268   .text:00000000000004fc .LVL94
     /tmp/cc2lxhOw.s:1305   .text:0000000000000518 .LVL95
     /tmp/cc2lxhOw.s:1201   .text:00000000000004c4 .LVL92
     /tmp/cc2lxhOw.s:1238   .text:00000000000004e0 .LVL93
     /tmp/cc2lxhOw.s:1128   .text:0000000000000480 .LVL88
     /tmp/cc2lxhOw.s:1165   .text:000000000000049c .LVL89
     /tmp/cc2lxhOw.s:1038   .text:0000000000000418 .LVL82
     /tmp/cc2lxhOw.s:1092   .text:000000000000044c .LVL85
     /tmp/cc2lxhOw.s:1048   .text:0000000000000428 .LVL83
     /tmp/cc2lxhOw.s:1085   .text:0000000000000444 .LVL84
     /tmp/cc2lxhOw.s:949    .text:0000000000000398 .LVL68
     /tmp/cc2lxhOw.s:975    .text:00000000000003c8 .LVL70
     /tmp/cc2lxhOw.s:999    .text:00000000000003f8 .LVL75
     /tmp/cc2lxhOw.s:1009   .text:0000000000000408 .LVL78
     /tmp/cc2lxhOw.s:1013   .text:000000000000040c .LVL79
     /tmp/cc2lxhOw.s:1016   .text:0000000000000410 .LVL80
     /tmp/cc2lxhOw.s:1002   .text:00000000000003fc .LVL76
     /tmp/cc2lxhOw.s:1005   .text:0000000000000400 .LVL77
     /tmp/cc2lxhOw.s:971    .text:00000000000003c4 .LVL69
     /tmp/cc2lxhOw.s:979    .text:00000000000003d4 .LVL72
     /tmp/cc2lxhOw.s:987    .text:00000000000003e4 .LVL73
     /tmp/cc2lxhOw.s:1026   .text:0000000000000414 .LVL81
     /tmp/cc2lxhOw.s:863    .text:0000000000000344 .LVL62
     /tmp/cc2lxhOw.s:932    .text:0000000000000390 .LVL66
     /tmp/cc2lxhOw.s:936    .text:0000000000000394 .LVL67
     /tmp/cc2lxhOw.s:876    .text:0000000000000358 .LVL63
     /tmp/cc2lxhOw.s:913    .text:0000000000000374 .LVL64
     /tmp/cc2lxhOw.s:771    .text:00000000000002e0 .LVL54
     /tmp/cc2lxhOw.s:828    .text:0000000000000318 .LVL57
     /tmp/cc2lxhOw.s:846    .text:000000000000033c .LVL60
     /tmp/cc2lxhOw.s:850    .text:0000000000000340 .LVL61
     /tmp/cc2lxhOw.s:784    .text:00000000000002f4 .LVL55
     /tmp/cc2lxhOw.s:821    .text:0000000000000310 .LVL56
     /tmp/cc2lxhOw.s:685    .text:000000000000028c .LVL48
     /tmp/cc2lxhOw.s:754    .text:00000000000002d8 .LVL52
     /tmp/cc2lxhOw.s:758    .text:00000000000002dc .LVL53
     /tmp/cc2lxhOw.s:698    .text:00000000000002a0 .LVL49
     /tmp/cc2lxhOw.s:735    .text:00000000000002bc .LVL50
     /tmp/cc2lxhOw.s:599    .text:0000000000000238 .LVL42
     /tmp/cc2lxhOw.s:668    .text:0000000000000284 .LVL46
     /tmp/cc2lxhOw.s:672    .text:0000000000000288 .LVL47
     /tmp/cc2lxhOw.s:612    .text:000000000000024c .LVL43
     /tmp/cc2lxhOw.s:649    .text:0000000000000268 .LVL44
     /tmp/cc2lxhOw.s:534    .text:00000000000001fc .LVL39
     /tmp/cc2lxhOw.s:571    .text:0000000000000218 .LVL40
     /tmp/cc2lxhOw.s:455    .text:00000000000001b4 .LVL36
     /tmp/cc2lxhOw.s:492    .text:00000000000001d0 .LVL37
     /tmp/cc2lxhOw.s:357    .text:0000000000000124 .LVL22
     /tmp/cc2lxhOw.s:383    .text:0000000000000154 .LVL24
     /tmp/cc2lxhOw.s:407    .text:0000000000000184 .LVL29
GAS LISTING /tmp/cc2lxhOw.s 			page 52


     /tmp/cc2lxhOw.s:417    .text:0000000000000194 .LVL32
     /tmp/cc2lxhOw.s:421    .text:0000000000000198 .LVL33
     /tmp/cc2lxhOw.s:424    .text:000000000000019c .LVL34
     /tmp/cc2lxhOw.s:410    .text:0000000000000188 .LVL30
     /tmp/cc2lxhOw.s:413    .text:000000000000018c .LVL31
     /tmp/cc2lxhOw.s:379    .text:0000000000000150 .LVL23
     /tmp/cc2lxhOw.s:387    .text:0000000000000160 .LVL26
     /tmp/cc2lxhOw.s:395    .text:0000000000000170 .LVL27
     /tmp/cc2lxhOw.s:434    .text:00000000000001a0 .LVL35
     /tmp/cc2lxhOw.s:282    .text:00000000000000ec .LVL17
     /tmp/cc2lxhOw.s:335    .text:0000000000000114 .LVL20
     /tmp/cc2lxhOw.s:340    .text:0000000000000118 .LVL21
     /tmp/cc2lxhOw.s:290    .text:00000000000000f8 .LVL18
     /tmp/cc2lxhOw.s:324    .text:0000000000000110 .LVL19
     /tmp/cc2lxhOw.s:224    .text:00000000000000c4 .LVL15
     /tmp/cc2lxhOw.s:261    .text:00000000000000e0 .LVL16
     /tmp/cc2lxhOw.s:131    .text:0000000000000064 .LVL9
     /tmp/cc2lxhOw.s:200    .text:00000000000000b0 .LVL13
     /tmp/cc2lxhOw.s:204    .text:00000000000000b4 .LVL14
     /tmp/cc2lxhOw.s:144    .text:0000000000000078 .LVL10
     /tmp/cc2lxhOw.s:181    .text:0000000000000094 .LVL11
     /tmp/cc2lxhOw.s:14     .text:0000000000000000 .LVL0
     /tmp/cc2lxhOw.s:27     .text:0000000000000014 .LVL1
     /tmp/cc2lxhOw.s:35     .text:0000000000000020 .LVL2
     /tmp/cc2lxhOw.s:115    .text:000000000000005c .LVL7
     /tmp/cc2lxhOw.s:119    .text:0000000000000060 .LVL8
     /tmp/cc2lxhOw.s:94     .text:0000000000000044 .LVL5
     /tmp/cc2lxhOw.s:113    .text:0000000000000058 .LVL6
     /tmp/cc2lxhOw.s:44     .text:0000000000000024 .LVL3
     /tmp/cc2lxhOw.s:83     .text:0000000000000040 .LVL4
     /tmp/cc2lxhOw.s:1466   .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv11returnValueEv
_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_
_Z11printStringPKc
_ZN3TCB10threadMakeEPPS_PFvPvES2_S2_
